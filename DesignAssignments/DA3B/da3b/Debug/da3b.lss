
da3b.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000570  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005c4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005f4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000634  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000074a  00000000  00000000  00000674  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068f  00000000  00000000  00000dbe  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002c0  00000000  00000000  0000144d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b4  00000000  00000000  00001710  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000379  00000000  00000000  000017c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000125  00000000  00000000  00001b3d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001c62  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 84 00 	jmp	0x108	; 0x108 <__vector_13>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 6e 00 	call	0xdc	; 0xdc <main>
  78:	0c 94 b6 02 	jmp	0x56c	; 0x56c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <USART_init>:
#include <util/setbaud.h>


void USART_init() {
//initialize USART
	UBRR0H = UBRRH_VALUE; //stores high byte of baud value into reg
  80:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE; //stores low byte of baud value into reg
  84:	87 e6       	ldi	r24, 0x67	; 103
  86:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00); //use 8-bits
  8a:	e2 ec       	ldi	r30, 0xC2	; 194
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	80 81       	ld	r24, Z
  90:	86 60       	ori	r24, 0x06	; 6
  92:	80 83       	st	Z, r24
	UCSR0B |= (1 << TXEN0) | (1 << RXEN0); //enable transmitter and receiver
  94:	e1 ec       	ldi	r30, 0xC1	; 193
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	88 61       	ori	r24, 0x18	; 24
  9c:	80 83       	st	Z, r24
//initialize timer1 (for 1s delay)
	TCCR1B |= (1 << CS12) | (1 << CS10); //enable 1024 prescaler
  9e:	e1 e8       	ldi	r30, 0x81	; 129
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	80 81       	ld	r24, Z
  a4:	85 60       	ori	r24, 0x05	; 5
  a6:	80 83       	st	Z, r24
	TIMSK1 |= (1 << TOIE1); //enable interrupt for overflow flag
  a8:	ef e6       	ldi	r30, 0x6F	; 111
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	80 81       	ld	r24, Z
  ae:	81 60       	ori	r24, 0x01	; 1
  b0:	80 83       	st	Z, r24
	sei(); //enable global interrupts
  b2:	78 94       	sei
  b4:	08 95       	ret

000000b6 <ADC_init>:
}


void ADC_init() {
//initialize ADC 
	ADMUX |= (1 << REFS0) | (1 << MUX2) | (1 << MUX0); //set AVCC reference and set ADC5 (PC5) as ADC pin, left-justified 
  b6:	ec e7       	ldi	r30, 0x7C	; 124
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	85 64       	ori	r24, 0x45	; 69
  be:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN) | (1 << ADPS2) | (1 << ADPS0); //enable ADC, set to 32 ADC prescaler 
  c0:	ea e7       	ldi	r30, 0x7A	; 122
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	80 81       	ld	r24, Z
  c6:	85 68       	ori	r24, 0x85	; 133
  c8:	80 83       	st	Z, r24
  ca:	08 95       	ret

000000cc <USART_send>:



void USART_send (unsigned char ch) {
//only places a single character into the buffer register UDR
	while (!(UCSR0A & (1 << UDRE0))) {
  cc:	e0 ec       	ldi	r30, 0xC0	; 192
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	90 81       	ld	r25, Z
  d2:	95 ff       	sbrs	r25, 5
  d4:	fd cf       	rjmp	.-6      	; 0xd0 <USART_send+0x4>
		//wait until data reg is empty -- (1<<UDRE0) means reg is empty
	}

	UDR0 = ch; 
  d6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  da:	08 95       	ret

000000dc <main>:


int main(void)
{
//call functions to initialize USART and ADC
	USART_init();
  dc:	0e 94 40 00 	call	0x80	; 0x80 <USART_init>
	ADC_init();	
  e0:	0e 94 5b 00 	call	0xb6	; 0xb6 <ADC_init>
	TCNT1 = 49911; //initialize timer
  e4:	87 ef       	ldi	r24, 0xF7	; 247
  e6:	92 ec       	ldi	r25, 0xC2	; 194
  e8:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  ec:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>

    while (1) 
    {
		//do nothing until timer interrupt occurs 
		ADCSRA |= (1 << ADSC); //begin ADC conversion
  f0:	ea e7       	ldi	r30, 0x7A	; 122
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 81       	ld	r24, Z
  f6:	80 64       	ori	r24, 0x40	; 64
  f8:	80 83       	st	Z, r24
		while ((ADCSRA & (1<<ADIF)) == 0); //wait for ADC conversion to finish (when ADIF flag is set)
  fa:	80 81       	ld	r24, Z
  fc:	84 ff       	sbrs	r24, 4
  fe:	fd cf       	rjmp	.-6      	; 0xfa <main+0x1e>
		ADCSRA |= (1 << ADIF); //clear ADC interrupt flag
 100:	80 81       	ld	r24, Z
 102:	80 61       	ori	r24, 0x10	; 16
 104:	80 83       	st	Z, r24
    }
 106:	f6 cf       	rjmp	.-20     	; 0xf4 <main+0x18>

00000108 <__vector_13>:
}


ISR (TIMER1_OVF_vect) {
 108:	1f 92       	push	r1
 10a:	0f 92       	push	r0
 10c:	0f b6       	in	r0, 0x3f	; 63
 10e:	0f 92       	push	r0
 110:	11 24       	eor	r1, r1
 112:	2f 93       	push	r18
 114:	3f 93       	push	r19
 116:	4f 93       	push	r20
 118:	5f 93       	push	r21
 11a:	6f 93       	push	r22
 11c:	7f 93       	push	r23
 11e:	8f 93       	push	r24
 120:	9f 93       	push	r25
 122:	af 93       	push	r26
 124:	bf 93       	push	r27
 126:	cf 93       	push	r28
 128:	df 93       	push	r29
 12a:	ef 93       	push	r30
 12c:	ff 93       	push	r31
		//convert ADC data into temperature value
		int temp = ADCL;
 12e:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
		temp = temp | (ADCH << 8);
 132:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
		temp = (temp/1024.0) * 5000/10; //this will convert the ADC data into a temperature value
 136:	70 e0       	ldi	r23, 0x00	; 0
 138:	78 2b       	or	r23, r24
 13a:	07 2e       	mov	r0, r23
 13c:	00 0c       	add	r0, r0
 13e:	88 0b       	sbc	r24, r24
 140:	99 0b       	sbc	r25, r25
 142:	0e 94 95 01 	call	0x32a	; 0x32a <__floatsisf>
 146:	20 e0       	ldi	r18, 0x00	; 0
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	40 e8       	ldi	r20, 0x80	; 128
 14c:	5a e3       	ldi	r21, 0x3A	; 58
 14e:	0e 94 21 02 	call	0x442	; 0x442 <__mulsf3>
 152:	20 e0       	ldi	r18, 0x00	; 0
 154:	30 e4       	ldi	r19, 0x40	; 64
 156:	4c e9       	ldi	r20, 0x9C	; 156
 158:	55 e4       	ldi	r21, 0x45	; 69
 15a:	0e 94 21 02 	call	0x442	; 0x442 <__mulsf3>
 15e:	20 e0       	ldi	r18, 0x00	; 0
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	40 e2       	ldi	r20, 0x20	; 32
 164:	51 e4       	ldi	r21, 0x41	; 65
 166:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <__divsf3>
 16a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <__fixsfsi>
		//temp = ((temp * 9)/5.0) + 32; //convert to Fahrenheit 
		USART_send((temp/100) + '0'); //transfers hundreds value
 16e:	cb 01       	movw	r24, r22
 170:	64 e6       	ldi	r22, 0x64	; 100
 172:	70 e0       	ldi	r23, 0x00	; 0
 174:	0e 94 8e 02 	call	0x51c	; 0x51c <__divmodhi4>
 178:	ec 01       	movw	r28, r24
 17a:	80 e3       	ldi	r24, 0x30	; 48
 17c:	86 0f       	add	r24, r22
 17e:	0e 94 66 00 	call	0xcc	; 0xcc <USART_send>
		temp = temp % 100;
		USART_send((temp/10) + '0'); //transfers tens value
 182:	ce 01       	movw	r24, r28
 184:	6a e0       	ldi	r22, 0x0A	; 10
 186:	70 e0       	ldi	r23, 0x00	; 0
 188:	0e 94 8e 02 	call	0x51c	; 0x51c <__divmodhi4>
 18c:	c8 2f       	mov	r28, r24
 18e:	80 e3       	ldi	r24, 0x30	; 48
 190:	86 0f       	add	r24, r22
 192:	0e 94 66 00 	call	0xcc	; 0xcc <USART_send>
		temp = temp % 10;
		USART_send((temp) + '0'); //transfers ones value
 196:	80 e3       	ldi	r24, 0x30	; 48
 198:	8c 0f       	add	r24, r28
 19a:	0e 94 66 00 	call	0xcc	; 0xcc <USART_send>
		USART_send('\r'); //carriage return
 19e:	8d e0       	ldi	r24, 0x0D	; 13
 1a0:	0e 94 66 00 	call	0xcc	; 0xcc <USART_send>
		

		TCNT1 = 49911; //reset timer 
 1a4:	87 ef       	ldi	r24, 0xF7	; 247
 1a6:	92 ec       	ldi	r25, 0xC2	; 194
 1a8:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1ac:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
}
 1b0:	ff 91       	pop	r31
 1b2:	ef 91       	pop	r30
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	bf 91       	pop	r27
 1ba:	af 91       	pop	r26
 1bc:	9f 91       	pop	r25
 1be:	8f 91       	pop	r24
 1c0:	7f 91       	pop	r23
 1c2:	6f 91       	pop	r22
 1c4:	5f 91       	pop	r21
 1c6:	4f 91       	pop	r20
 1c8:	3f 91       	pop	r19
 1ca:	2f 91       	pop	r18
 1cc:	0f 90       	pop	r0
 1ce:	0f be       	out	0x3f, r0	; 63
 1d0:	0f 90       	pop	r0
 1d2:	1f 90       	pop	r1
 1d4:	18 95       	reti

000001d6 <__divsf3>:
 1d6:	0e 94 ff 00 	call	0x1fe	; 0x1fe <__divsf3x>
 1da:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__fp_round>
 1de:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <__fp_pscB>
 1e2:	58 f0       	brcs	.+22     	; 0x1fa <__divsf3+0x24>
 1e4:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <__fp_pscA>
 1e8:	40 f0       	brcs	.+16     	; 0x1fa <__divsf3+0x24>
 1ea:	29 f4       	brne	.+10     	; 0x1f6 <__divsf3+0x20>
 1ec:	5f 3f       	cpi	r21, 0xFF	; 255
 1ee:	29 f0       	breq	.+10     	; 0x1fa <__divsf3+0x24>
 1f0:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__fp_inf>
 1f4:	51 11       	cpse	r21, r1
 1f6:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_szero>
 1fa:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__fp_nan>

000001fe <__divsf3x>:
 1fe:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__fp_split3>
 202:	68 f3       	brcs	.-38     	; 0x1de <__divsf3+0x8>

00000204 <__divsf3_pse>:
 204:	99 23       	and	r25, r25
 206:	b1 f3       	breq	.-20     	; 0x1f4 <__divsf3+0x1e>
 208:	55 23       	and	r21, r21
 20a:	91 f3       	breq	.-28     	; 0x1f0 <__divsf3+0x1a>
 20c:	95 1b       	sub	r25, r21
 20e:	55 0b       	sbc	r21, r21
 210:	bb 27       	eor	r27, r27
 212:	aa 27       	eor	r26, r26
 214:	62 17       	cp	r22, r18
 216:	73 07       	cpc	r23, r19
 218:	84 07       	cpc	r24, r20
 21a:	38 f0       	brcs	.+14     	; 0x22a <__divsf3_pse+0x26>
 21c:	9f 5f       	subi	r25, 0xFF	; 255
 21e:	5f 4f       	sbci	r21, 0xFF	; 255
 220:	22 0f       	add	r18, r18
 222:	33 1f       	adc	r19, r19
 224:	44 1f       	adc	r20, r20
 226:	aa 1f       	adc	r26, r26
 228:	a9 f3       	breq	.-22     	; 0x214 <__divsf3_pse+0x10>
 22a:	35 d0       	rcall	.+106    	; 0x296 <__divsf3_pse+0x92>
 22c:	0e 2e       	mov	r0, r30
 22e:	3a f0       	brmi	.+14     	; 0x23e <__divsf3_pse+0x3a>
 230:	e0 e8       	ldi	r30, 0x80	; 128
 232:	32 d0       	rcall	.+100    	; 0x298 <__divsf3_pse+0x94>
 234:	91 50       	subi	r25, 0x01	; 1
 236:	50 40       	sbci	r21, 0x00	; 0
 238:	e6 95       	lsr	r30
 23a:	00 1c       	adc	r0, r0
 23c:	ca f7       	brpl	.-14     	; 0x230 <__divsf3_pse+0x2c>
 23e:	2b d0       	rcall	.+86     	; 0x296 <__divsf3_pse+0x92>
 240:	fe 2f       	mov	r31, r30
 242:	29 d0       	rcall	.+82     	; 0x296 <__divsf3_pse+0x92>
 244:	66 0f       	add	r22, r22
 246:	77 1f       	adc	r23, r23
 248:	88 1f       	adc	r24, r24
 24a:	bb 1f       	adc	r27, r27
 24c:	26 17       	cp	r18, r22
 24e:	37 07       	cpc	r19, r23
 250:	48 07       	cpc	r20, r24
 252:	ab 07       	cpc	r26, r27
 254:	b0 e8       	ldi	r27, 0x80	; 128
 256:	09 f0       	breq	.+2      	; 0x25a <__divsf3_pse+0x56>
 258:	bb 0b       	sbc	r27, r27
 25a:	80 2d       	mov	r24, r0
 25c:	bf 01       	movw	r22, r30
 25e:	ff 27       	eor	r31, r31
 260:	93 58       	subi	r25, 0x83	; 131
 262:	5f 4f       	sbci	r21, 0xFF	; 255
 264:	3a f0       	brmi	.+14     	; 0x274 <__divsf3_pse+0x70>
 266:	9e 3f       	cpi	r25, 0xFE	; 254
 268:	51 05       	cpc	r21, r1
 26a:	78 f0       	brcs	.+30     	; 0x28a <__divsf3_pse+0x86>
 26c:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__fp_inf>
 270:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_szero>
 274:	5f 3f       	cpi	r21, 0xFF	; 255
 276:	e4 f3       	brlt	.-8      	; 0x270 <__divsf3_pse+0x6c>
 278:	98 3e       	cpi	r25, 0xE8	; 232
 27a:	d4 f3       	brlt	.-12     	; 0x270 <__divsf3_pse+0x6c>
 27c:	86 95       	lsr	r24
 27e:	77 95       	ror	r23
 280:	67 95       	ror	r22
 282:	b7 95       	ror	r27
 284:	f7 95       	ror	r31
 286:	9f 5f       	subi	r25, 0xFF	; 255
 288:	c9 f7       	brne	.-14     	; 0x27c <__divsf3_pse+0x78>
 28a:	88 0f       	add	r24, r24
 28c:	91 1d       	adc	r25, r1
 28e:	96 95       	lsr	r25
 290:	87 95       	ror	r24
 292:	97 f9       	bld	r25, 7
 294:	08 95       	ret
 296:	e1 e0       	ldi	r30, 0x01	; 1
 298:	66 0f       	add	r22, r22
 29a:	77 1f       	adc	r23, r23
 29c:	88 1f       	adc	r24, r24
 29e:	bb 1f       	adc	r27, r27
 2a0:	62 17       	cp	r22, r18
 2a2:	73 07       	cpc	r23, r19
 2a4:	84 07       	cpc	r24, r20
 2a6:	ba 07       	cpc	r27, r26
 2a8:	20 f0       	brcs	.+8      	; 0x2b2 <__divsf3_pse+0xae>
 2aa:	62 1b       	sub	r22, r18
 2ac:	73 0b       	sbc	r23, r19
 2ae:	84 0b       	sbc	r24, r20
 2b0:	ba 0b       	sbc	r27, r26
 2b2:	ee 1f       	adc	r30, r30
 2b4:	88 f7       	brcc	.-30     	; 0x298 <__divsf3_pse+0x94>
 2b6:	e0 95       	com	r30
 2b8:	08 95       	ret

000002ba <__fixsfsi>:
 2ba:	0e 94 64 01 	call	0x2c8	; 0x2c8 <__fixunssfsi>
 2be:	68 94       	set
 2c0:	b1 11       	cpse	r27, r1
 2c2:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_szero>
 2c6:	08 95       	ret

000002c8 <__fixunssfsi>:
 2c8:	0e 94 00 02 	call	0x400	; 0x400 <__fp_splitA>
 2cc:	88 f0       	brcs	.+34     	; 0x2f0 <__fixunssfsi+0x28>
 2ce:	9f 57       	subi	r25, 0x7F	; 127
 2d0:	98 f0       	brcs	.+38     	; 0x2f8 <__fixunssfsi+0x30>
 2d2:	b9 2f       	mov	r27, r25
 2d4:	99 27       	eor	r25, r25
 2d6:	b7 51       	subi	r27, 0x17	; 23
 2d8:	b0 f0       	brcs	.+44     	; 0x306 <__fixunssfsi+0x3e>
 2da:	e1 f0       	breq	.+56     	; 0x314 <__fixunssfsi+0x4c>
 2dc:	66 0f       	add	r22, r22
 2de:	77 1f       	adc	r23, r23
 2e0:	88 1f       	adc	r24, r24
 2e2:	99 1f       	adc	r25, r25
 2e4:	1a f0       	brmi	.+6      	; 0x2ec <__fixunssfsi+0x24>
 2e6:	ba 95       	dec	r27
 2e8:	c9 f7       	brne	.-14     	; 0x2dc <__fixunssfsi+0x14>
 2ea:	14 c0       	rjmp	.+40     	; 0x314 <__fixunssfsi+0x4c>
 2ec:	b1 30       	cpi	r27, 0x01	; 1
 2ee:	91 f0       	breq	.+36     	; 0x314 <__fixunssfsi+0x4c>
 2f0:	0e 94 1a 02 	call	0x434	; 0x434 <__fp_zero>
 2f4:	b1 e0       	ldi	r27, 0x01	; 1
 2f6:	08 95       	ret
 2f8:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_zero>
 2fc:	67 2f       	mov	r22, r23
 2fe:	78 2f       	mov	r23, r24
 300:	88 27       	eor	r24, r24
 302:	b8 5f       	subi	r27, 0xF8	; 248
 304:	39 f0       	breq	.+14     	; 0x314 <__fixunssfsi+0x4c>
 306:	b9 3f       	cpi	r27, 0xF9	; 249
 308:	cc f3       	brlt	.-14     	; 0x2fc <__fixunssfsi+0x34>
 30a:	86 95       	lsr	r24
 30c:	77 95       	ror	r23
 30e:	67 95       	ror	r22
 310:	b3 95       	inc	r27
 312:	d9 f7       	brne	.-10     	; 0x30a <__fixunssfsi+0x42>
 314:	3e f4       	brtc	.+14     	; 0x324 <__fixunssfsi+0x5c>
 316:	90 95       	com	r25
 318:	80 95       	com	r24
 31a:	70 95       	com	r23
 31c:	61 95       	neg	r22
 31e:	7f 4f       	sbci	r23, 0xFF	; 255
 320:	8f 4f       	sbci	r24, 0xFF	; 255
 322:	9f 4f       	sbci	r25, 0xFF	; 255
 324:	08 95       	ret

00000326 <__floatunsisf>:
 326:	e8 94       	clt
 328:	09 c0       	rjmp	.+18     	; 0x33c <__floatsisf+0x12>

0000032a <__floatsisf>:
 32a:	97 fb       	bst	r25, 7
 32c:	3e f4       	brtc	.+14     	; 0x33c <__floatsisf+0x12>
 32e:	90 95       	com	r25
 330:	80 95       	com	r24
 332:	70 95       	com	r23
 334:	61 95       	neg	r22
 336:	7f 4f       	sbci	r23, 0xFF	; 255
 338:	8f 4f       	sbci	r24, 0xFF	; 255
 33a:	9f 4f       	sbci	r25, 0xFF	; 255
 33c:	99 23       	and	r25, r25
 33e:	a9 f0       	breq	.+42     	; 0x36a <__floatsisf+0x40>
 340:	f9 2f       	mov	r31, r25
 342:	96 e9       	ldi	r25, 0x96	; 150
 344:	bb 27       	eor	r27, r27
 346:	93 95       	inc	r25
 348:	f6 95       	lsr	r31
 34a:	87 95       	ror	r24
 34c:	77 95       	ror	r23
 34e:	67 95       	ror	r22
 350:	b7 95       	ror	r27
 352:	f1 11       	cpse	r31, r1
 354:	f8 cf       	rjmp	.-16     	; 0x346 <__floatsisf+0x1c>
 356:	fa f4       	brpl	.+62     	; 0x396 <__floatsisf+0x6c>
 358:	bb 0f       	add	r27, r27
 35a:	11 f4       	brne	.+4      	; 0x360 <__floatsisf+0x36>
 35c:	60 ff       	sbrs	r22, 0
 35e:	1b c0       	rjmp	.+54     	; 0x396 <__floatsisf+0x6c>
 360:	6f 5f       	subi	r22, 0xFF	; 255
 362:	7f 4f       	sbci	r23, 0xFF	; 255
 364:	8f 4f       	sbci	r24, 0xFF	; 255
 366:	9f 4f       	sbci	r25, 0xFF	; 255
 368:	16 c0       	rjmp	.+44     	; 0x396 <__floatsisf+0x6c>
 36a:	88 23       	and	r24, r24
 36c:	11 f0       	breq	.+4      	; 0x372 <__floatsisf+0x48>
 36e:	96 e9       	ldi	r25, 0x96	; 150
 370:	11 c0       	rjmp	.+34     	; 0x394 <__floatsisf+0x6a>
 372:	77 23       	and	r23, r23
 374:	21 f0       	breq	.+8      	; 0x37e <__floatsisf+0x54>
 376:	9e e8       	ldi	r25, 0x8E	; 142
 378:	87 2f       	mov	r24, r23
 37a:	76 2f       	mov	r23, r22
 37c:	05 c0       	rjmp	.+10     	; 0x388 <__floatsisf+0x5e>
 37e:	66 23       	and	r22, r22
 380:	71 f0       	breq	.+28     	; 0x39e <__floatsisf+0x74>
 382:	96 e8       	ldi	r25, 0x86	; 134
 384:	86 2f       	mov	r24, r22
 386:	70 e0       	ldi	r23, 0x00	; 0
 388:	60 e0       	ldi	r22, 0x00	; 0
 38a:	2a f0       	brmi	.+10     	; 0x396 <__floatsisf+0x6c>
 38c:	9a 95       	dec	r25
 38e:	66 0f       	add	r22, r22
 390:	77 1f       	adc	r23, r23
 392:	88 1f       	adc	r24, r24
 394:	da f7       	brpl	.-10     	; 0x38c <__floatsisf+0x62>
 396:	88 0f       	add	r24, r24
 398:	96 95       	lsr	r25
 39a:	87 95       	ror	r24
 39c:	97 f9       	bld	r25, 7
 39e:	08 95       	ret

000003a0 <__fp_inf>:
 3a0:	97 f9       	bld	r25, 7
 3a2:	9f 67       	ori	r25, 0x7F	; 127
 3a4:	80 e8       	ldi	r24, 0x80	; 128
 3a6:	70 e0       	ldi	r23, 0x00	; 0
 3a8:	60 e0       	ldi	r22, 0x00	; 0
 3aa:	08 95       	ret

000003ac <__fp_nan>:
 3ac:	9f ef       	ldi	r25, 0xFF	; 255
 3ae:	80 ec       	ldi	r24, 0xC0	; 192
 3b0:	08 95       	ret

000003b2 <__fp_pscA>:
 3b2:	00 24       	eor	r0, r0
 3b4:	0a 94       	dec	r0
 3b6:	16 16       	cp	r1, r22
 3b8:	17 06       	cpc	r1, r23
 3ba:	18 06       	cpc	r1, r24
 3bc:	09 06       	cpc	r0, r25
 3be:	08 95       	ret

000003c0 <__fp_pscB>:
 3c0:	00 24       	eor	r0, r0
 3c2:	0a 94       	dec	r0
 3c4:	12 16       	cp	r1, r18
 3c6:	13 06       	cpc	r1, r19
 3c8:	14 06       	cpc	r1, r20
 3ca:	05 06       	cpc	r0, r21
 3cc:	08 95       	ret

000003ce <__fp_round>:
 3ce:	09 2e       	mov	r0, r25
 3d0:	03 94       	inc	r0
 3d2:	00 0c       	add	r0, r0
 3d4:	11 f4       	brne	.+4      	; 0x3da <__fp_round+0xc>
 3d6:	88 23       	and	r24, r24
 3d8:	52 f0       	brmi	.+20     	; 0x3ee <__fp_round+0x20>
 3da:	bb 0f       	add	r27, r27
 3dc:	40 f4       	brcc	.+16     	; 0x3ee <__fp_round+0x20>
 3de:	bf 2b       	or	r27, r31
 3e0:	11 f4       	brne	.+4      	; 0x3e6 <__fp_round+0x18>
 3e2:	60 ff       	sbrs	r22, 0
 3e4:	04 c0       	rjmp	.+8      	; 0x3ee <__fp_round+0x20>
 3e6:	6f 5f       	subi	r22, 0xFF	; 255
 3e8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ea:	8f 4f       	sbci	r24, 0xFF	; 255
 3ec:	9f 4f       	sbci	r25, 0xFF	; 255
 3ee:	08 95       	ret

000003f0 <__fp_split3>:
 3f0:	57 fd       	sbrc	r21, 7
 3f2:	90 58       	subi	r25, 0x80	; 128
 3f4:	44 0f       	add	r20, r20
 3f6:	55 1f       	adc	r21, r21
 3f8:	59 f0       	breq	.+22     	; 0x410 <__fp_splitA+0x10>
 3fa:	5f 3f       	cpi	r21, 0xFF	; 255
 3fc:	71 f0       	breq	.+28     	; 0x41a <__fp_splitA+0x1a>
 3fe:	47 95       	ror	r20

00000400 <__fp_splitA>:
 400:	88 0f       	add	r24, r24
 402:	97 fb       	bst	r25, 7
 404:	99 1f       	adc	r25, r25
 406:	61 f0       	breq	.+24     	; 0x420 <__fp_splitA+0x20>
 408:	9f 3f       	cpi	r25, 0xFF	; 255
 40a:	79 f0       	breq	.+30     	; 0x42a <__fp_splitA+0x2a>
 40c:	87 95       	ror	r24
 40e:	08 95       	ret
 410:	12 16       	cp	r1, r18
 412:	13 06       	cpc	r1, r19
 414:	14 06       	cpc	r1, r20
 416:	55 1f       	adc	r21, r21
 418:	f2 cf       	rjmp	.-28     	; 0x3fe <__fp_split3+0xe>
 41a:	46 95       	lsr	r20
 41c:	f1 df       	rcall	.-30     	; 0x400 <__fp_splitA>
 41e:	08 c0       	rjmp	.+16     	; 0x430 <__fp_splitA+0x30>
 420:	16 16       	cp	r1, r22
 422:	17 06       	cpc	r1, r23
 424:	18 06       	cpc	r1, r24
 426:	99 1f       	adc	r25, r25
 428:	f1 cf       	rjmp	.-30     	; 0x40c <__fp_splitA+0xc>
 42a:	86 95       	lsr	r24
 42c:	71 05       	cpc	r23, r1
 42e:	61 05       	cpc	r22, r1
 430:	08 94       	sec
 432:	08 95       	ret

00000434 <__fp_zero>:
 434:	e8 94       	clt

00000436 <__fp_szero>:
 436:	bb 27       	eor	r27, r27
 438:	66 27       	eor	r22, r22
 43a:	77 27       	eor	r23, r23
 43c:	cb 01       	movw	r24, r22
 43e:	97 f9       	bld	r25, 7
 440:	08 95       	ret

00000442 <__mulsf3>:
 442:	0e 94 34 02 	call	0x468	; 0x468 <__mulsf3x>
 446:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__fp_round>
 44a:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <__fp_pscA>
 44e:	38 f0       	brcs	.+14     	; 0x45e <__mulsf3+0x1c>
 450:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <__fp_pscB>
 454:	20 f0       	brcs	.+8      	; 0x45e <__mulsf3+0x1c>
 456:	95 23       	and	r25, r21
 458:	11 f0       	breq	.+4      	; 0x45e <__mulsf3+0x1c>
 45a:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__fp_inf>
 45e:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__fp_nan>
 462:	11 24       	eor	r1, r1
 464:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_szero>

00000468 <__mulsf3x>:
 468:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__fp_split3>
 46c:	70 f3       	brcs	.-36     	; 0x44a <__mulsf3+0x8>

0000046e <__mulsf3_pse>:
 46e:	95 9f       	mul	r25, r21
 470:	c1 f3       	breq	.-16     	; 0x462 <__mulsf3+0x20>
 472:	95 0f       	add	r25, r21
 474:	50 e0       	ldi	r21, 0x00	; 0
 476:	55 1f       	adc	r21, r21
 478:	62 9f       	mul	r22, r18
 47a:	f0 01       	movw	r30, r0
 47c:	72 9f       	mul	r23, r18
 47e:	bb 27       	eor	r27, r27
 480:	f0 0d       	add	r31, r0
 482:	b1 1d       	adc	r27, r1
 484:	63 9f       	mul	r22, r19
 486:	aa 27       	eor	r26, r26
 488:	f0 0d       	add	r31, r0
 48a:	b1 1d       	adc	r27, r1
 48c:	aa 1f       	adc	r26, r26
 48e:	64 9f       	mul	r22, r20
 490:	66 27       	eor	r22, r22
 492:	b0 0d       	add	r27, r0
 494:	a1 1d       	adc	r26, r1
 496:	66 1f       	adc	r22, r22
 498:	82 9f       	mul	r24, r18
 49a:	22 27       	eor	r18, r18
 49c:	b0 0d       	add	r27, r0
 49e:	a1 1d       	adc	r26, r1
 4a0:	62 1f       	adc	r22, r18
 4a2:	73 9f       	mul	r23, r19
 4a4:	b0 0d       	add	r27, r0
 4a6:	a1 1d       	adc	r26, r1
 4a8:	62 1f       	adc	r22, r18
 4aa:	83 9f       	mul	r24, r19
 4ac:	a0 0d       	add	r26, r0
 4ae:	61 1d       	adc	r22, r1
 4b0:	22 1f       	adc	r18, r18
 4b2:	74 9f       	mul	r23, r20
 4b4:	33 27       	eor	r19, r19
 4b6:	a0 0d       	add	r26, r0
 4b8:	61 1d       	adc	r22, r1
 4ba:	23 1f       	adc	r18, r19
 4bc:	84 9f       	mul	r24, r20
 4be:	60 0d       	add	r22, r0
 4c0:	21 1d       	adc	r18, r1
 4c2:	82 2f       	mov	r24, r18
 4c4:	76 2f       	mov	r23, r22
 4c6:	6a 2f       	mov	r22, r26
 4c8:	11 24       	eor	r1, r1
 4ca:	9f 57       	subi	r25, 0x7F	; 127
 4cc:	50 40       	sbci	r21, 0x00	; 0
 4ce:	9a f0       	brmi	.+38     	; 0x4f6 <__mulsf3_pse+0x88>
 4d0:	f1 f0       	breq	.+60     	; 0x50e <__mulsf3_pse+0xa0>
 4d2:	88 23       	and	r24, r24
 4d4:	4a f0       	brmi	.+18     	; 0x4e8 <__mulsf3_pse+0x7a>
 4d6:	ee 0f       	add	r30, r30
 4d8:	ff 1f       	adc	r31, r31
 4da:	bb 1f       	adc	r27, r27
 4dc:	66 1f       	adc	r22, r22
 4de:	77 1f       	adc	r23, r23
 4e0:	88 1f       	adc	r24, r24
 4e2:	91 50       	subi	r25, 0x01	; 1
 4e4:	50 40       	sbci	r21, 0x00	; 0
 4e6:	a9 f7       	brne	.-22     	; 0x4d2 <__mulsf3_pse+0x64>
 4e8:	9e 3f       	cpi	r25, 0xFE	; 254
 4ea:	51 05       	cpc	r21, r1
 4ec:	80 f0       	brcs	.+32     	; 0x50e <__mulsf3_pse+0xa0>
 4ee:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__fp_inf>
 4f2:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_szero>
 4f6:	5f 3f       	cpi	r21, 0xFF	; 255
 4f8:	e4 f3       	brlt	.-8      	; 0x4f2 <__mulsf3_pse+0x84>
 4fa:	98 3e       	cpi	r25, 0xE8	; 232
 4fc:	d4 f3       	brlt	.-12     	; 0x4f2 <__mulsf3_pse+0x84>
 4fe:	86 95       	lsr	r24
 500:	77 95       	ror	r23
 502:	67 95       	ror	r22
 504:	b7 95       	ror	r27
 506:	f7 95       	ror	r31
 508:	e7 95       	ror	r30
 50a:	9f 5f       	subi	r25, 0xFF	; 255
 50c:	c1 f7       	brne	.-16     	; 0x4fe <__mulsf3_pse+0x90>
 50e:	fe 2b       	or	r31, r30
 510:	88 0f       	add	r24, r24
 512:	91 1d       	adc	r25, r1
 514:	96 95       	lsr	r25
 516:	87 95       	ror	r24
 518:	97 f9       	bld	r25, 7
 51a:	08 95       	ret

0000051c <__divmodhi4>:
 51c:	97 fb       	bst	r25, 7
 51e:	07 2e       	mov	r0, r23
 520:	16 f4       	brtc	.+4      	; 0x526 <__divmodhi4+0xa>
 522:	00 94       	com	r0
 524:	07 d0       	rcall	.+14     	; 0x534 <__divmodhi4_neg1>
 526:	77 fd       	sbrc	r23, 7
 528:	09 d0       	rcall	.+18     	; 0x53c <__divmodhi4_neg2>
 52a:	0e 94 a2 02 	call	0x544	; 0x544 <__udivmodhi4>
 52e:	07 fc       	sbrc	r0, 7
 530:	05 d0       	rcall	.+10     	; 0x53c <__divmodhi4_neg2>
 532:	3e f4       	brtc	.+14     	; 0x542 <__divmodhi4_exit>

00000534 <__divmodhi4_neg1>:
 534:	90 95       	com	r25
 536:	81 95       	neg	r24
 538:	9f 4f       	sbci	r25, 0xFF	; 255
 53a:	08 95       	ret

0000053c <__divmodhi4_neg2>:
 53c:	70 95       	com	r23
 53e:	61 95       	neg	r22
 540:	7f 4f       	sbci	r23, 0xFF	; 255

00000542 <__divmodhi4_exit>:
 542:	08 95       	ret

00000544 <__udivmodhi4>:
 544:	aa 1b       	sub	r26, r26
 546:	bb 1b       	sub	r27, r27
 548:	51 e1       	ldi	r21, 0x11	; 17
 54a:	07 c0       	rjmp	.+14     	; 0x55a <__udivmodhi4_ep>

0000054c <__udivmodhi4_loop>:
 54c:	aa 1f       	adc	r26, r26
 54e:	bb 1f       	adc	r27, r27
 550:	a6 17       	cp	r26, r22
 552:	b7 07       	cpc	r27, r23
 554:	10 f0       	brcs	.+4      	; 0x55a <__udivmodhi4_ep>
 556:	a6 1b       	sub	r26, r22
 558:	b7 0b       	sbc	r27, r23

0000055a <__udivmodhi4_ep>:
 55a:	88 1f       	adc	r24, r24
 55c:	99 1f       	adc	r25, r25
 55e:	5a 95       	dec	r21
 560:	a9 f7       	brne	.-22     	; 0x54c <__udivmodhi4_loop>
 562:	80 95       	com	r24
 564:	90 95       	com	r25
 566:	bc 01       	movw	r22, r24
 568:	cd 01       	movw	r24, r26
 56a:	08 95       	ret

0000056c <_exit>:
 56c:	f8 94       	cli

0000056e <__stop_program>:
 56e:	ff cf       	rjmp	.-2      	; 0x56e <__stop_program>
