
Midterm1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000096  00800100  00000bc2  00000c36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bc2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000ccc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d28  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000d68  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000941  00000000  00000000  00000da8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000075f  00000000  00000000  000016e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000037a  00000000  00000000  00001e48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000080  00000000  00000000  000021c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000403  00000000  00000000  00002244  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001b4  00000000  00000000  00002647  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  000027fb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ec       	ldi	r30, 0xC2	; 194
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 39       	cpi	r26, 0x96	; 150
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 7d 00 	call	0xfa	; 0xfa <main>
  8e:	0c 94 df 05 	jmp	0xbbe	; 0xbbe <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <USART_init>:
//only places a single character into the buffer register UDR
	while (!(UCSR0A & (1 << UDRE0))) {
		//wait until data reg is empty -- (1<<UDRE0) means reg is empty
	}

	UDR0 = ch; 
  96:	88 e0       	ldi	r24, 0x08	; 8
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  9e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  a2:	e2 ec       	ldi	r30, 0xC2	; 194
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	86 60       	ori	r24, 0x06	; 6
  aa:	80 83       	st	Z, r24
  ac:	e1 ec       	ldi	r30, 0xC1	; 193
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	80 81       	ld	r24, Z
  b2:	88 61       	ori	r24, 0x18	; 24
  b4:	80 83       	st	Z, r24
  b6:	08 95       	ret

000000b8 <ADC_init>:
  b8:	ec e7       	ldi	r30, 0x7C	; 124
  ba:	f0 e0       	ldi	r31, 0x00	; 0
  bc:	80 81       	ld	r24, Z
  be:	80 64       	ori	r24, 0x40	; 64
  c0:	80 83       	st	Z, r24
  c2:	ea e7       	ldi	r30, 0x7A	; 122
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	85 68       	ori	r24, 0x85	; 133
  ca:	80 83       	st	Z, r24
  cc:	08 95       	ret

000000ce <USART_putstring>:
}



void USART_putstring(char *str) {
  ce:	cf 93       	push	r28
  d0:	df 93       	push	r29
	//loop until data reg. collects all chars from string
	while ((*str != '\0')) {
  d2:	fc 01       	movw	r30, r24
  d4:	20 81       	ld	r18, Z
  d6:	22 23       	and	r18, r18
  d8:	69 f0       	breq	.+26     	; 0xf4 <USART_putstring+0x26>
  da:	dc 01       	movw	r26, r24
  dc:	11 96       	adiw	r26, 0x01	; 1
		while (!(UCSR0A & (1 << UDRE0))) {
  de:	e0 ec       	ldi	r30, 0xC0	; 192
  e0:	f0 e0       	ldi	r31, 0x00	; 0
			//wait until data reg is empty -- (1<<UDRE0) means reg is empty
		}
		UDR0 = *str; //data reg grabs character by character
  e2:	c6 ec       	ldi	r28, 0xC6	; 198
  e4:	d0 e0       	ldi	r29, 0x00	; 0


void USART_putstring(char *str) {
	//loop until data reg. collects all chars from string
	while ((*str != '\0')) {
		while (!(UCSR0A & (1 << UDRE0))) {
  e6:	90 81       	ld	r25, Z
  e8:	95 ff       	sbrs	r25, 5
  ea:	fd cf       	rjmp	.-6      	; 0xe6 <USART_putstring+0x18>
			//wait until data reg is empty -- (1<<UDRE0) means reg is empty
		}
		UDR0 = *str; //data reg grabs character by character
  ec:	28 83       	st	Y, r18



void USART_putstring(char *str) {
	//loop until data reg. collects all chars from string
	while ((*str != '\0')) {
  ee:	2d 91       	ld	r18, X+
  f0:	21 11       	cpse	r18, r1
  f2:	f9 cf       	rjmp	.-14     	; 0xe6 <USART_putstring+0x18>
			//wait until data reg is empty -- (1<<UDRE0) means reg is empty
		}
		UDR0 = *str; //data reg grabs character by character
		str++;
	}
}
  f4:	df 91       	pop	r29
  f6:	cf 91       	pop	r28
  f8:	08 95       	ret

000000fa <main>:


int main(void)
{
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
  fe:	cd b7       	in	r28, 0x3d	; 61
 100:	de b7       	in	r29, 0x3e	; 62
 102:	c4 56       	subi	r28, 0x64	; 100
 104:	d1 09       	sbc	r29, r1
 106:	0f b6       	in	r0, 0x3f	; 63
 108:	f8 94       	cli
 10a:	de bf       	out	0x3e, r29	; 62
 10c:	0f be       	out	0x3f, r0	; 63
 10e:	cd bf       	out	0x3d, r28	; 61
//call functions to initialize USART and ADC
	USART_init();
 110:	0e 94 4b 00 	call	0x96	; 0x96 <USART_init>
	ADC_init();	
 114:	0e 94 5c 00 	call	0xb8	; 0xb8 <ADC_init>
	char cmdGet[100]; //set as empty string for now, will need to initialize using snprintf function 
	char *cmdClose = "AT+CIPCLOSE\r\n";

    while (1) 
    {
		ADCSRA |= (1 << ADSC); //begin ADC conversion
 118:	0a e7       	ldi	r16, 0x7A	; 122
 11a:	10 e0       	ldi	r17, 0x00	; 0

		USART_putstring(cmdSend); //send cmd
		_delay_ms(1000);


		temp = ADCL;
 11c:	0f 2e       	mov	r0, r31
 11e:	f8 e7       	ldi	r31, 0x78	; 120
 120:	8f 2e       	mov	r8, r31
 122:	91 2c       	mov	r9, r1
 124:	f0 2d       	mov	r31, r0
		temp = temp | (ADCH << 8);
 126:	0f 2e       	mov	r0, r31
 128:	f9 e7       	ldi	r31, 0x79	; 121
 12a:	af 2e       	mov	r10, r31
 12c:	b1 2c       	mov	r11, r1
 12e:	f0 2d       	mov	r31, r0
		temp = (temp/1024.0) * 5000/10; //this will convert the ADC data into a temperature value
		temp = temp % 100;

		snprintf(cmdGet, sizeof(cmdGet), "GET https://api.thingspeak.com/update?api_key=NGI0X28O7MD6FIGN&field1=%d\r\n", temp); //this will store long string with updated temperature value into cmdGet
 130:	0f 2e       	mov	r0, r31
 132:	f4 e6       	ldi	r31, 0x64	; 100
 134:	6f 2e       	mov	r6, r31
 136:	71 2c       	mov	r7, r1
 138:	f0 2d       	mov	r31, r0
 13a:	0f 2e       	mov	r0, r31
 13c:	fc e3       	ldi	r31, 0x3C	; 60
 13e:	cf 2e       	mov	r12, r31
 140:	f1 e0       	ldi	r31, 0x01	; 1
 142:	df 2e       	mov	r13, r31
 144:	f0 2d       	mov	r31, r0
 146:	0f 2e       	mov	r0, r31
 148:	f4 e6       	ldi	r31, 0x64	; 100
 14a:	5f 2e       	mov	r5, r31
 14c:	f0 2d       	mov	r31, r0
 14e:	ce 01       	movw	r24, r28
 150:	01 96       	adiw	r24, 0x01	; 1
 152:	7c 01       	movw	r14, r24
	char cmdGet[100]; //set as empty string for now, will need to initialize using snprintf function 
	char *cmdClose = "AT+CIPCLOSE\r\n";

    while (1) 
    {
		ADCSRA |= (1 << ADSC); //begin ADC conversion
 154:	f8 01       	movw	r30, r16
 156:	80 81       	ld	r24, Z
 158:	80 64       	ori	r24, 0x40	; 64
 15a:	80 83       	st	Z, r24
		while ((ADCSRA & (1<<ADIF)) == 0); //wait for ADC conversion to finish (when ADIF flag is set)
 15c:	f8 01       	movw	r30, r16
 15e:	80 81       	ld	r24, Z
 160:	84 ff       	sbrs	r24, 4
 162:	fc cf       	rjmp	.-8      	; 0x15c <main+0x62>
		ADCSRA |= (1 << ADIF); //clear ADC interrupt flag
 164:	80 81       	ld	r24, Z
 166:	80 61       	ori	r24, 0x10	; 16
 168:	80 83       	st	Z, r24

		USART_putstring(cmdStart); //sends start cmd 
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	91 e0       	ldi	r25, 0x01	; 1
 16e:	0e 94 67 00 	call	0xce	; 0xce <USART_putstring>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 172:	ff ef       	ldi	r31, 0xFF	; 255
 174:	23 ed       	ldi	r18, 0xD3	; 211
 176:	80 e3       	ldi	r24, 0x30	; 48
 178:	f1 50       	subi	r31, 0x01	; 1
 17a:	20 40       	sbci	r18, 0x00	; 0
 17c:	80 40       	sbci	r24, 0x00	; 0
 17e:	e1 f7       	brne	.-8      	; 0x178 <main+0x7e>
 180:	00 c0       	rjmp	.+0      	; 0x182 <main+0x88>
 182:	00 00       	nop
		_delay_ms(1000);

		USART_putstring(cmdSend); //send cmd
 184:	8c e2       	ldi	r24, 0x2C	; 44
 186:	91 e0       	ldi	r25, 0x01	; 1
 188:	0e 94 67 00 	call	0xce	; 0xce <USART_putstring>
 18c:	9f ef       	ldi	r25, 0xFF	; 255
 18e:	e3 ed       	ldi	r30, 0xD3	; 211
 190:	f0 e3       	ldi	r31, 0x30	; 48
 192:	91 50       	subi	r25, 0x01	; 1
 194:	e0 40       	sbci	r30, 0x00	; 0
 196:	f0 40       	sbci	r31, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0x98>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0xa2>
 19c:	00 00       	nop
		_delay_ms(1000);


		temp = ADCL;
 19e:	f4 01       	movw	r30, r8
 1a0:	60 81       	ld	r22, Z
		temp = temp | (ADCH << 8);
 1a2:	f5 01       	movw	r30, r10
 1a4:	80 81       	ld	r24, Z
		temp = (temp/1024.0) * 5000/10; //this will convert the ADC data into a temperature value
 1a6:	70 e0       	ldi	r23, 0x00	; 0
 1a8:	78 2b       	or	r23, r24
 1aa:	07 2e       	mov	r0, r23
 1ac:	00 0c       	add	r0, r0
 1ae:	88 0b       	sbc	r24, r24
 1b0:	99 0b       	sbc	r25, r25
 1b2:	0e 94 c6 01 	call	0x38c	; 0x38c <__floatsisf>
 1b6:	20 e0       	ldi	r18, 0x00	; 0
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	40 e8       	ldi	r20, 0x80	; 128
 1bc:	5a e3       	ldi	r21, 0x3A	; 58
 1be:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__mulsf3>
 1c2:	20 e0       	ldi	r18, 0x00	; 0
 1c4:	30 e4       	ldi	r19, 0x40	; 64
 1c6:	4c e9       	ldi	r20, 0x9C	; 156
 1c8:	55 e4       	ldi	r21, 0x45	; 69
 1ca:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__mulsf3>
 1ce:	20 e0       	ldi	r18, 0x00	; 0
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	40 e2       	ldi	r20, 0x20	; 32
 1d4:	51 e4       	ldi	r21, 0x41	; 65
 1d6:	0e 94 1c 01 	call	0x238	; 0x238 <__divsf3>
 1da:	0e 94 8e 01 	call	0x31c	; 0x31c <__fixsfsi>
		temp = temp % 100;

		snprintf(cmdGet, sizeof(cmdGet), "GET https://api.thingspeak.com/update?api_key=NGI0X28O7MD6FIGN&field1=%d\r\n", temp); //this will store long string with updated temperature value into cmdGet
 1de:	cb 01       	movw	r24, r22
 1e0:	b3 01       	movw	r22, r6
 1e2:	0e 94 bf 02 	call	0x57e	; 0x57e <__divmodhi4>
 1e6:	9f 93       	push	r25
 1e8:	8f 93       	push	r24
 1ea:	df 92       	push	r13
 1ec:	cf 92       	push	r12
 1ee:	1f 92       	push	r1
 1f0:	5f 92       	push	r5
 1f2:	ff 92       	push	r15
 1f4:	ef 92       	push	r14
 1f6:	0e 94 e7 02 	call	0x5ce	; 0x5ce <snprintf>
		USART_putstring(cmdGet);
 1fa:	c7 01       	movw	r24, r14
 1fc:	0e 94 67 00 	call	0xce	; 0xce <USART_putstring>
 200:	ff ef       	ldi	r31, 0xFF	; 255
 202:	23 ed       	ldi	r18, 0xD3	; 211
 204:	80 e3       	ldi	r24, 0x30	; 48
 206:	f1 50       	subi	r31, 0x01	; 1
 208:	20 40       	sbci	r18, 0x00	; 0
 20a:	80 40       	sbci	r24, 0x00	; 0
 20c:	e1 f7       	brne	.-8      	; 0x206 <main+0x10c>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <main+0x116>
 210:	00 00       	nop
		_delay_ms(1000);

		USART_putstring(cmdClose); //close cmd 
 212:	87 e8       	ldi	r24, 0x87	; 135
 214:	91 e0       	ldi	r25, 0x01	; 1
 216:	0e 94 67 00 	call	0xce	; 0xce <USART_putstring>
 21a:	9f ef       	ldi	r25, 0xFF	; 255
 21c:	e3 ed       	ldi	r30, 0xD3	; 211
 21e:	f0 e3       	ldi	r31, 0x30	; 48
 220:	91 50       	subi	r25, 0x01	; 1
 222:	e0 40       	sbci	r30, 0x00	; 0
 224:	f0 40       	sbci	r31, 0x00	; 0
 226:	e1 f7       	brne	.-8      	; 0x220 <main+0x126>
 228:	00 c0       	rjmp	.+0      	; 0x22a <main+0x130>
 22a:	00 00       	nop
 22c:	0f b6       	in	r0, 0x3f	; 63
 22e:	f8 94       	cli
 230:	de bf       	out	0x3e, r29	; 62
 232:	0f be       	out	0x3f, r0	; 63
 234:	cd bf       	out	0x3d, r28	; 61
 236:	8e cf       	rjmp	.-228    	; 0x154 <main+0x5a>

00000238 <__divsf3>:
 238:	0e 94 30 01 	call	0x260	; 0x260 <__divsf3x>
 23c:	0c 94 18 02 	jmp	0x430	; 0x430 <__fp_round>
 240:	0e 94 11 02 	call	0x422	; 0x422 <__fp_pscB>
 244:	58 f0       	brcs	.+22     	; 0x25c <__divsf3+0x24>
 246:	0e 94 0a 02 	call	0x414	; 0x414 <__fp_pscA>
 24a:	40 f0       	brcs	.+16     	; 0x25c <__divsf3+0x24>
 24c:	29 f4       	brne	.+10     	; 0x258 <__divsf3+0x20>
 24e:	5f 3f       	cpi	r21, 0xFF	; 255
 250:	29 f0       	breq	.+10     	; 0x25c <__divsf3+0x24>
 252:	0c 94 01 02 	jmp	0x402	; 0x402 <__fp_inf>
 256:	51 11       	cpse	r21, r1
 258:	0c 94 4c 02 	jmp	0x498	; 0x498 <__fp_szero>
 25c:	0c 94 07 02 	jmp	0x40e	; 0x40e <__fp_nan>

00000260 <__divsf3x>:
 260:	0e 94 29 02 	call	0x452	; 0x452 <__fp_split3>
 264:	68 f3       	brcs	.-38     	; 0x240 <__divsf3+0x8>

00000266 <__divsf3_pse>:
 266:	99 23       	and	r25, r25
 268:	b1 f3       	breq	.-20     	; 0x256 <__divsf3+0x1e>
 26a:	55 23       	and	r21, r21
 26c:	91 f3       	breq	.-28     	; 0x252 <__divsf3+0x1a>
 26e:	95 1b       	sub	r25, r21
 270:	55 0b       	sbc	r21, r21
 272:	bb 27       	eor	r27, r27
 274:	aa 27       	eor	r26, r26
 276:	62 17       	cp	r22, r18
 278:	73 07       	cpc	r23, r19
 27a:	84 07       	cpc	r24, r20
 27c:	38 f0       	brcs	.+14     	; 0x28c <__divsf3_pse+0x26>
 27e:	9f 5f       	subi	r25, 0xFF	; 255
 280:	5f 4f       	sbci	r21, 0xFF	; 255
 282:	22 0f       	add	r18, r18
 284:	33 1f       	adc	r19, r19
 286:	44 1f       	adc	r20, r20
 288:	aa 1f       	adc	r26, r26
 28a:	a9 f3       	breq	.-22     	; 0x276 <__divsf3_pse+0x10>
 28c:	35 d0       	rcall	.+106    	; 0x2f8 <__divsf3_pse+0x92>
 28e:	0e 2e       	mov	r0, r30
 290:	3a f0       	brmi	.+14     	; 0x2a0 <__divsf3_pse+0x3a>
 292:	e0 e8       	ldi	r30, 0x80	; 128
 294:	32 d0       	rcall	.+100    	; 0x2fa <__divsf3_pse+0x94>
 296:	91 50       	subi	r25, 0x01	; 1
 298:	50 40       	sbci	r21, 0x00	; 0
 29a:	e6 95       	lsr	r30
 29c:	00 1c       	adc	r0, r0
 29e:	ca f7       	brpl	.-14     	; 0x292 <__divsf3_pse+0x2c>
 2a0:	2b d0       	rcall	.+86     	; 0x2f8 <__divsf3_pse+0x92>
 2a2:	fe 2f       	mov	r31, r30
 2a4:	29 d0       	rcall	.+82     	; 0x2f8 <__divsf3_pse+0x92>
 2a6:	66 0f       	add	r22, r22
 2a8:	77 1f       	adc	r23, r23
 2aa:	88 1f       	adc	r24, r24
 2ac:	bb 1f       	adc	r27, r27
 2ae:	26 17       	cp	r18, r22
 2b0:	37 07       	cpc	r19, r23
 2b2:	48 07       	cpc	r20, r24
 2b4:	ab 07       	cpc	r26, r27
 2b6:	b0 e8       	ldi	r27, 0x80	; 128
 2b8:	09 f0       	breq	.+2      	; 0x2bc <__divsf3_pse+0x56>
 2ba:	bb 0b       	sbc	r27, r27
 2bc:	80 2d       	mov	r24, r0
 2be:	bf 01       	movw	r22, r30
 2c0:	ff 27       	eor	r31, r31
 2c2:	93 58       	subi	r25, 0x83	; 131
 2c4:	5f 4f       	sbci	r21, 0xFF	; 255
 2c6:	3a f0       	brmi	.+14     	; 0x2d6 <__divsf3_pse+0x70>
 2c8:	9e 3f       	cpi	r25, 0xFE	; 254
 2ca:	51 05       	cpc	r21, r1
 2cc:	78 f0       	brcs	.+30     	; 0x2ec <__divsf3_pse+0x86>
 2ce:	0c 94 01 02 	jmp	0x402	; 0x402 <__fp_inf>
 2d2:	0c 94 4c 02 	jmp	0x498	; 0x498 <__fp_szero>
 2d6:	5f 3f       	cpi	r21, 0xFF	; 255
 2d8:	e4 f3       	brlt	.-8      	; 0x2d2 <__divsf3_pse+0x6c>
 2da:	98 3e       	cpi	r25, 0xE8	; 232
 2dc:	d4 f3       	brlt	.-12     	; 0x2d2 <__divsf3_pse+0x6c>
 2de:	86 95       	lsr	r24
 2e0:	77 95       	ror	r23
 2e2:	67 95       	ror	r22
 2e4:	b7 95       	ror	r27
 2e6:	f7 95       	ror	r31
 2e8:	9f 5f       	subi	r25, 0xFF	; 255
 2ea:	c9 f7       	brne	.-14     	; 0x2de <__divsf3_pse+0x78>
 2ec:	88 0f       	add	r24, r24
 2ee:	91 1d       	adc	r25, r1
 2f0:	96 95       	lsr	r25
 2f2:	87 95       	ror	r24
 2f4:	97 f9       	bld	r25, 7
 2f6:	08 95       	ret
 2f8:	e1 e0       	ldi	r30, 0x01	; 1
 2fa:	66 0f       	add	r22, r22
 2fc:	77 1f       	adc	r23, r23
 2fe:	88 1f       	adc	r24, r24
 300:	bb 1f       	adc	r27, r27
 302:	62 17       	cp	r22, r18
 304:	73 07       	cpc	r23, r19
 306:	84 07       	cpc	r24, r20
 308:	ba 07       	cpc	r27, r26
 30a:	20 f0       	brcs	.+8      	; 0x314 <__divsf3_pse+0xae>
 30c:	62 1b       	sub	r22, r18
 30e:	73 0b       	sbc	r23, r19
 310:	84 0b       	sbc	r24, r20
 312:	ba 0b       	sbc	r27, r26
 314:	ee 1f       	adc	r30, r30
 316:	88 f7       	brcc	.-30     	; 0x2fa <__divsf3_pse+0x94>
 318:	e0 95       	com	r30
 31a:	08 95       	ret

0000031c <__fixsfsi>:
 31c:	0e 94 95 01 	call	0x32a	; 0x32a <__fixunssfsi>
 320:	68 94       	set
 322:	b1 11       	cpse	r27, r1
 324:	0c 94 4c 02 	jmp	0x498	; 0x498 <__fp_szero>
 328:	08 95       	ret

0000032a <__fixunssfsi>:
 32a:	0e 94 31 02 	call	0x462	; 0x462 <__fp_splitA>
 32e:	88 f0       	brcs	.+34     	; 0x352 <__fixunssfsi+0x28>
 330:	9f 57       	subi	r25, 0x7F	; 127
 332:	98 f0       	brcs	.+38     	; 0x35a <__fixunssfsi+0x30>
 334:	b9 2f       	mov	r27, r25
 336:	99 27       	eor	r25, r25
 338:	b7 51       	subi	r27, 0x17	; 23
 33a:	b0 f0       	brcs	.+44     	; 0x368 <__fixunssfsi+0x3e>
 33c:	e1 f0       	breq	.+56     	; 0x376 <__fixunssfsi+0x4c>
 33e:	66 0f       	add	r22, r22
 340:	77 1f       	adc	r23, r23
 342:	88 1f       	adc	r24, r24
 344:	99 1f       	adc	r25, r25
 346:	1a f0       	brmi	.+6      	; 0x34e <__fixunssfsi+0x24>
 348:	ba 95       	dec	r27
 34a:	c9 f7       	brne	.-14     	; 0x33e <__fixunssfsi+0x14>
 34c:	14 c0       	rjmp	.+40     	; 0x376 <__fixunssfsi+0x4c>
 34e:	b1 30       	cpi	r27, 0x01	; 1
 350:	91 f0       	breq	.+36     	; 0x376 <__fixunssfsi+0x4c>
 352:	0e 94 4b 02 	call	0x496	; 0x496 <__fp_zero>
 356:	b1 e0       	ldi	r27, 0x01	; 1
 358:	08 95       	ret
 35a:	0c 94 4b 02 	jmp	0x496	; 0x496 <__fp_zero>
 35e:	67 2f       	mov	r22, r23
 360:	78 2f       	mov	r23, r24
 362:	88 27       	eor	r24, r24
 364:	b8 5f       	subi	r27, 0xF8	; 248
 366:	39 f0       	breq	.+14     	; 0x376 <__fixunssfsi+0x4c>
 368:	b9 3f       	cpi	r27, 0xF9	; 249
 36a:	cc f3       	brlt	.-14     	; 0x35e <__fixunssfsi+0x34>
 36c:	86 95       	lsr	r24
 36e:	77 95       	ror	r23
 370:	67 95       	ror	r22
 372:	b3 95       	inc	r27
 374:	d9 f7       	brne	.-10     	; 0x36c <__fixunssfsi+0x42>
 376:	3e f4       	brtc	.+14     	; 0x386 <__fixunssfsi+0x5c>
 378:	90 95       	com	r25
 37a:	80 95       	com	r24
 37c:	70 95       	com	r23
 37e:	61 95       	neg	r22
 380:	7f 4f       	sbci	r23, 0xFF	; 255
 382:	8f 4f       	sbci	r24, 0xFF	; 255
 384:	9f 4f       	sbci	r25, 0xFF	; 255
 386:	08 95       	ret

00000388 <__floatunsisf>:
 388:	e8 94       	clt
 38a:	09 c0       	rjmp	.+18     	; 0x39e <__floatsisf+0x12>

0000038c <__floatsisf>:
 38c:	97 fb       	bst	r25, 7
 38e:	3e f4       	brtc	.+14     	; 0x39e <__floatsisf+0x12>
 390:	90 95       	com	r25
 392:	80 95       	com	r24
 394:	70 95       	com	r23
 396:	61 95       	neg	r22
 398:	7f 4f       	sbci	r23, 0xFF	; 255
 39a:	8f 4f       	sbci	r24, 0xFF	; 255
 39c:	9f 4f       	sbci	r25, 0xFF	; 255
 39e:	99 23       	and	r25, r25
 3a0:	a9 f0       	breq	.+42     	; 0x3cc <__floatsisf+0x40>
 3a2:	f9 2f       	mov	r31, r25
 3a4:	96 e9       	ldi	r25, 0x96	; 150
 3a6:	bb 27       	eor	r27, r27
 3a8:	93 95       	inc	r25
 3aa:	f6 95       	lsr	r31
 3ac:	87 95       	ror	r24
 3ae:	77 95       	ror	r23
 3b0:	67 95       	ror	r22
 3b2:	b7 95       	ror	r27
 3b4:	f1 11       	cpse	r31, r1
 3b6:	f8 cf       	rjmp	.-16     	; 0x3a8 <__floatsisf+0x1c>
 3b8:	fa f4       	brpl	.+62     	; 0x3f8 <__floatsisf+0x6c>
 3ba:	bb 0f       	add	r27, r27
 3bc:	11 f4       	brne	.+4      	; 0x3c2 <__floatsisf+0x36>
 3be:	60 ff       	sbrs	r22, 0
 3c0:	1b c0       	rjmp	.+54     	; 0x3f8 <__floatsisf+0x6c>
 3c2:	6f 5f       	subi	r22, 0xFF	; 255
 3c4:	7f 4f       	sbci	r23, 0xFF	; 255
 3c6:	8f 4f       	sbci	r24, 0xFF	; 255
 3c8:	9f 4f       	sbci	r25, 0xFF	; 255
 3ca:	16 c0       	rjmp	.+44     	; 0x3f8 <__floatsisf+0x6c>
 3cc:	88 23       	and	r24, r24
 3ce:	11 f0       	breq	.+4      	; 0x3d4 <__floatsisf+0x48>
 3d0:	96 e9       	ldi	r25, 0x96	; 150
 3d2:	11 c0       	rjmp	.+34     	; 0x3f6 <__floatsisf+0x6a>
 3d4:	77 23       	and	r23, r23
 3d6:	21 f0       	breq	.+8      	; 0x3e0 <__floatsisf+0x54>
 3d8:	9e e8       	ldi	r25, 0x8E	; 142
 3da:	87 2f       	mov	r24, r23
 3dc:	76 2f       	mov	r23, r22
 3de:	05 c0       	rjmp	.+10     	; 0x3ea <__floatsisf+0x5e>
 3e0:	66 23       	and	r22, r22
 3e2:	71 f0       	breq	.+28     	; 0x400 <__LOCK_REGION_LENGTH__>
 3e4:	96 e8       	ldi	r25, 0x86	; 134
 3e6:	86 2f       	mov	r24, r22
 3e8:	70 e0       	ldi	r23, 0x00	; 0
 3ea:	60 e0       	ldi	r22, 0x00	; 0
 3ec:	2a f0       	brmi	.+10     	; 0x3f8 <__floatsisf+0x6c>
 3ee:	9a 95       	dec	r25
 3f0:	66 0f       	add	r22, r22
 3f2:	77 1f       	adc	r23, r23
 3f4:	88 1f       	adc	r24, r24
 3f6:	da f7       	brpl	.-10     	; 0x3ee <__floatsisf+0x62>
 3f8:	88 0f       	add	r24, r24
 3fa:	96 95       	lsr	r25
 3fc:	87 95       	ror	r24
 3fe:	97 f9       	bld	r25, 7
 400:	08 95       	ret

00000402 <__fp_inf>:
 402:	97 f9       	bld	r25, 7
 404:	9f 67       	ori	r25, 0x7F	; 127
 406:	80 e8       	ldi	r24, 0x80	; 128
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	60 e0       	ldi	r22, 0x00	; 0
 40c:	08 95       	ret

0000040e <__fp_nan>:
 40e:	9f ef       	ldi	r25, 0xFF	; 255
 410:	80 ec       	ldi	r24, 0xC0	; 192
 412:	08 95       	ret

00000414 <__fp_pscA>:
 414:	00 24       	eor	r0, r0
 416:	0a 94       	dec	r0
 418:	16 16       	cp	r1, r22
 41a:	17 06       	cpc	r1, r23
 41c:	18 06       	cpc	r1, r24
 41e:	09 06       	cpc	r0, r25
 420:	08 95       	ret

00000422 <__fp_pscB>:
 422:	00 24       	eor	r0, r0
 424:	0a 94       	dec	r0
 426:	12 16       	cp	r1, r18
 428:	13 06       	cpc	r1, r19
 42a:	14 06       	cpc	r1, r20
 42c:	05 06       	cpc	r0, r21
 42e:	08 95       	ret

00000430 <__fp_round>:
 430:	09 2e       	mov	r0, r25
 432:	03 94       	inc	r0
 434:	00 0c       	add	r0, r0
 436:	11 f4       	brne	.+4      	; 0x43c <__fp_round+0xc>
 438:	88 23       	and	r24, r24
 43a:	52 f0       	brmi	.+20     	; 0x450 <__fp_round+0x20>
 43c:	bb 0f       	add	r27, r27
 43e:	40 f4       	brcc	.+16     	; 0x450 <__fp_round+0x20>
 440:	bf 2b       	or	r27, r31
 442:	11 f4       	brne	.+4      	; 0x448 <__fp_round+0x18>
 444:	60 ff       	sbrs	r22, 0
 446:	04 c0       	rjmp	.+8      	; 0x450 <__fp_round+0x20>
 448:	6f 5f       	subi	r22, 0xFF	; 255
 44a:	7f 4f       	sbci	r23, 0xFF	; 255
 44c:	8f 4f       	sbci	r24, 0xFF	; 255
 44e:	9f 4f       	sbci	r25, 0xFF	; 255
 450:	08 95       	ret

00000452 <__fp_split3>:
 452:	57 fd       	sbrc	r21, 7
 454:	90 58       	subi	r25, 0x80	; 128
 456:	44 0f       	add	r20, r20
 458:	55 1f       	adc	r21, r21
 45a:	59 f0       	breq	.+22     	; 0x472 <__fp_splitA+0x10>
 45c:	5f 3f       	cpi	r21, 0xFF	; 255
 45e:	71 f0       	breq	.+28     	; 0x47c <__fp_splitA+0x1a>
 460:	47 95       	ror	r20

00000462 <__fp_splitA>:
 462:	88 0f       	add	r24, r24
 464:	97 fb       	bst	r25, 7
 466:	99 1f       	adc	r25, r25
 468:	61 f0       	breq	.+24     	; 0x482 <__fp_splitA+0x20>
 46a:	9f 3f       	cpi	r25, 0xFF	; 255
 46c:	79 f0       	breq	.+30     	; 0x48c <__fp_splitA+0x2a>
 46e:	87 95       	ror	r24
 470:	08 95       	ret
 472:	12 16       	cp	r1, r18
 474:	13 06       	cpc	r1, r19
 476:	14 06       	cpc	r1, r20
 478:	55 1f       	adc	r21, r21
 47a:	f2 cf       	rjmp	.-28     	; 0x460 <__fp_split3+0xe>
 47c:	46 95       	lsr	r20
 47e:	f1 df       	rcall	.-30     	; 0x462 <__fp_splitA>
 480:	08 c0       	rjmp	.+16     	; 0x492 <__fp_splitA+0x30>
 482:	16 16       	cp	r1, r22
 484:	17 06       	cpc	r1, r23
 486:	18 06       	cpc	r1, r24
 488:	99 1f       	adc	r25, r25
 48a:	f1 cf       	rjmp	.-30     	; 0x46e <__fp_splitA+0xc>
 48c:	86 95       	lsr	r24
 48e:	71 05       	cpc	r23, r1
 490:	61 05       	cpc	r22, r1
 492:	08 94       	sec
 494:	08 95       	ret

00000496 <__fp_zero>:
 496:	e8 94       	clt

00000498 <__fp_szero>:
 498:	bb 27       	eor	r27, r27
 49a:	66 27       	eor	r22, r22
 49c:	77 27       	eor	r23, r23
 49e:	cb 01       	movw	r24, r22
 4a0:	97 f9       	bld	r25, 7
 4a2:	08 95       	ret

000004a4 <__mulsf3>:
 4a4:	0e 94 65 02 	call	0x4ca	; 0x4ca <__mulsf3x>
 4a8:	0c 94 18 02 	jmp	0x430	; 0x430 <__fp_round>
 4ac:	0e 94 0a 02 	call	0x414	; 0x414 <__fp_pscA>
 4b0:	38 f0       	brcs	.+14     	; 0x4c0 <__mulsf3+0x1c>
 4b2:	0e 94 11 02 	call	0x422	; 0x422 <__fp_pscB>
 4b6:	20 f0       	brcs	.+8      	; 0x4c0 <__mulsf3+0x1c>
 4b8:	95 23       	and	r25, r21
 4ba:	11 f0       	breq	.+4      	; 0x4c0 <__mulsf3+0x1c>
 4bc:	0c 94 01 02 	jmp	0x402	; 0x402 <__fp_inf>
 4c0:	0c 94 07 02 	jmp	0x40e	; 0x40e <__fp_nan>
 4c4:	11 24       	eor	r1, r1
 4c6:	0c 94 4c 02 	jmp	0x498	; 0x498 <__fp_szero>

000004ca <__mulsf3x>:
 4ca:	0e 94 29 02 	call	0x452	; 0x452 <__fp_split3>
 4ce:	70 f3       	brcs	.-36     	; 0x4ac <__mulsf3+0x8>

000004d0 <__mulsf3_pse>:
 4d0:	95 9f       	mul	r25, r21
 4d2:	c1 f3       	breq	.-16     	; 0x4c4 <__mulsf3+0x20>
 4d4:	95 0f       	add	r25, r21
 4d6:	50 e0       	ldi	r21, 0x00	; 0
 4d8:	55 1f       	adc	r21, r21
 4da:	62 9f       	mul	r22, r18
 4dc:	f0 01       	movw	r30, r0
 4de:	72 9f       	mul	r23, r18
 4e0:	bb 27       	eor	r27, r27
 4e2:	f0 0d       	add	r31, r0
 4e4:	b1 1d       	adc	r27, r1
 4e6:	63 9f       	mul	r22, r19
 4e8:	aa 27       	eor	r26, r26
 4ea:	f0 0d       	add	r31, r0
 4ec:	b1 1d       	adc	r27, r1
 4ee:	aa 1f       	adc	r26, r26
 4f0:	64 9f       	mul	r22, r20
 4f2:	66 27       	eor	r22, r22
 4f4:	b0 0d       	add	r27, r0
 4f6:	a1 1d       	adc	r26, r1
 4f8:	66 1f       	adc	r22, r22
 4fa:	82 9f       	mul	r24, r18
 4fc:	22 27       	eor	r18, r18
 4fe:	b0 0d       	add	r27, r0
 500:	a1 1d       	adc	r26, r1
 502:	62 1f       	adc	r22, r18
 504:	73 9f       	mul	r23, r19
 506:	b0 0d       	add	r27, r0
 508:	a1 1d       	adc	r26, r1
 50a:	62 1f       	adc	r22, r18
 50c:	83 9f       	mul	r24, r19
 50e:	a0 0d       	add	r26, r0
 510:	61 1d       	adc	r22, r1
 512:	22 1f       	adc	r18, r18
 514:	74 9f       	mul	r23, r20
 516:	33 27       	eor	r19, r19
 518:	a0 0d       	add	r26, r0
 51a:	61 1d       	adc	r22, r1
 51c:	23 1f       	adc	r18, r19
 51e:	84 9f       	mul	r24, r20
 520:	60 0d       	add	r22, r0
 522:	21 1d       	adc	r18, r1
 524:	82 2f       	mov	r24, r18
 526:	76 2f       	mov	r23, r22
 528:	6a 2f       	mov	r22, r26
 52a:	11 24       	eor	r1, r1
 52c:	9f 57       	subi	r25, 0x7F	; 127
 52e:	50 40       	sbci	r21, 0x00	; 0
 530:	9a f0       	brmi	.+38     	; 0x558 <__mulsf3_pse+0x88>
 532:	f1 f0       	breq	.+60     	; 0x570 <__mulsf3_pse+0xa0>
 534:	88 23       	and	r24, r24
 536:	4a f0       	brmi	.+18     	; 0x54a <__mulsf3_pse+0x7a>
 538:	ee 0f       	add	r30, r30
 53a:	ff 1f       	adc	r31, r31
 53c:	bb 1f       	adc	r27, r27
 53e:	66 1f       	adc	r22, r22
 540:	77 1f       	adc	r23, r23
 542:	88 1f       	adc	r24, r24
 544:	91 50       	subi	r25, 0x01	; 1
 546:	50 40       	sbci	r21, 0x00	; 0
 548:	a9 f7       	brne	.-22     	; 0x534 <__mulsf3_pse+0x64>
 54a:	9e 3f       	cpi	r25, 0xFE	; 254
 54c:	51 05       	cpc	r21, r1
 54e:	80 f0       	brcs	.+32     	; 0x570 <__mulsf3_pse+0xa0>
 550:	0c 94 01 02 	jmp	0x402	; 0x402 <__fp_inf>
 554:	0c 94 4c 02 	jmp	0x498	; 0x498 <__fp_szero>
 558:	5f 3f       	cpi	r21, 0xFF	; 255
 55a:	e4 f3       	brlt	.-8      	; 0x554 <__mulsf3_pse+0x84>
 55c:	98 3e       	cpi	r25, 0xE8	; 232
 55e:	d4 f3       	brlt	.-12     	; 0x554 <__mulsf3_pse+0x84>
 560:	86 95       	lsr	r24
 562:	77 95       	ror	r23
 564:	67 95       	ror	r22
 566:	b7 95       	ror	r27
 568:	f7 95       	ror	r31
 56a:	e7 95       	ror	r30
 56c:	9f 5f       	subi	r25, 0xFF	; 255
 56e:	c1 f7       	brne	.-16     	; 0x560 <__mulsf3_pse+0x90>
 570:	fe 2b       	or	r31, r30
 572:	88 0f       	add	r24, r24
 574:	91 1d       	adc	r25, r1
 576:	96 95       	lsr	r25
 578:	87 95       	ror	r24
 57a:	97 f9       	bld	r25, 7
 57c:	08 95       	ret

0000057e <__divmodhi4>:
 57e:	97 fb       	bst	r25, 7
 580:	07 2e       	mov	r0, r23
 582:	16 f4       	brtc	.+4      	; 0x588 <__divmodhi4+0xa>
 584:	00 94       	com	r0
 586:	07 d0       	rcall	.+14     	; 0x596 <__divmodhi4_neg1>
 588:	77 fd       	sbrc	r23, 7
 58a:	09 d0       	rcall	.+18     	; 0x59e <__divmodhi4_neg2>
 58c:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <__udivmodhi4>
 590:	07 fc       	sbrc	r0, 7
 592:	05 d0       	rcall	.+10     	; 0x59e <__divmodhi4_neg2>
 594:	3e f4       	brtc	.+14     	; 0x5a4 <__divmodhi4_exit>

00000596 <__divmodhi4_neg1>:
 596:	90 95       	com	r25
 598:	81 95       	neg	r24
 59a:	9f 4f       	sbci	r25, 0xFF	; 255
 59c:	08 95       	ret

0000059e <__divmodhi4_neg2>:
 59e:	70 95       	com	r23
 5a0:	61 95       	neg	r22
 5a2:	7f 4f       	sbci	r23, 0xFF	; 255

000005a4 <__divmodhi4_exit>:
 5a4:	08 95       	ret

000005a6 <__udivmodhi4>:
 5a6:	aa 1b       	sub	r26, r26
 5a8:	bb 1b       	sub	r27, r27
 5aa:	51 e1       	ldi	r21, 0x11	; 17
 5ac:	07 c0       	rjmp	.+14     	; 0x5bc <__udivmodhi4_ep>

000005ae <__udivmodhi4_loop>:
 5ae:	aa 1f       	adc	r26, r26
 5b0:	bb 1f       	adc	r27, r27
 5b2:	a6 17       	cp	r26, r22
 5b4:	b7 07       	cpc	r27, r23
 5b6:	10 f0       	brcs	.+4      	; 0x5bc <__udivmodhi4_ep>
 5b8:	a6 1b       	sub	r26, r22
 5ba:	b7 0b       	sbc	r27, r23

000005bc <__udivmodhi4_ep>:
 5bc:	88 1f       	adc	r24, r24
 5be:	99 1f       	adc	r25, r25
 5c0:	5a 95       	dec	r21
 5c2:	a9 f7       	brne	.-22     	; 0x5ae <__udivmodhi4_loop>
 5c4:	80 95       	com	r24
 5c6:	90 95       	com	r25
 5c8:	bc 01       	movw	r22, r24
 5ca:	cd 01       	movw	r24, r26
 5cc:	08 95       	ret

000005ce <snprintf>:
 5ce:	ae e0       	ldi	r26, 0x0E	; 14
 5d0:	b0 e0       	ldi	r27, 0x00	; 0
 5d2:	ed ee       	ldi	r30, 0xED	; 237
 5d4:	f2 e0       	ldi	r31, 0x02	; 2
 5d6:	0c 94 b6 05 	jmp	0xb6c	; 0xb6c <__prologue_saves__+0x1c>
 5da:	0d 89       	ldd	r16, Y+21	; 0x15
 5dc:	1e 89       	ldd	r17, Y+22	; 0x16
 5de:	8f 89       	ldd	r24, Y+23	; 0x17
 5e0:	98 8d       	ldd	r25, Y+24	; 0x18
 5e2:	26 e0       	ldi	r18, 0x06	; 6
 5e4:	2c 83       	std	Y+4, r18	; 0x04
 5e6:	1a 83       	std	Y+2, r17	; 0x02
 5e8:	09 83       	std	Y+1, r16	; 0x01
 5ea:	97 ff       	sbrs	r25, 7
 5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <snprintf+0x24>
 5ee:	80 e0       	ldi	r24, 0x00	; 0
 5f0:	90 e8       	ldi	r25, 0x80	; 128
 5f2:	01 97       	sbiw	r24, 0x01	; 1
 5f4:	9e 83       	std	Y+6, r25	; 0x06
 5f6:	8d 83       	std	Y+5, r24	; 0x05
 5f8:	ae 01       	movw	r20, r28
 5fa:	45 5e       	subi	r20, 0xE5	; 229
 5fc:	5f 4f       	sbci	r21, 0xFF	; 255
 5fe:	69 8d       	ldd	r22, Y+25	; 0x19
 600:	7a 8d       	ldd	r23, Y+26	; 0x1a
 602:	ce 01       	movw	r24, r28
 604:	01 96       	adiw	r24, 0x01	; 1
 606:	0e 94 17 03 	call	0x62e	; 0x62e <vfprintf>
 60a:	4d 81       	ldd	r20, Y+5	; 0x05
 60c:	5e 81       	ldd	r21, Y+6	; 0x06
 60e:	57 fd       	sbrc	r21, 7
 610:	0a c0       	rjmp	.+20     	; 0x626 <snprintf+0x58>
 612:	2f 81       	ldd	r18, Y+7	; 0x07
 614:	38 85       	ldd	r19, Y+8	; 0x08
 616:	42 17       	cp	r20, r18
 618:	53 07       	cpc	r21, r19
 61a:	0c f4       	brge	.+2      	; 0x61e <snprintf+0x50>
 61c:	9a 01       	movw	r18, r20
 61e:	f8 01       	movw	r30, r16
 620:	e2 0f       	add	r30, r18
 622:	f3 1f       	adc	r31, r19
 624:	10 82       	st	Z, r1
 626:	2e 96       	adiw	r28, 0x0e	; 14
 628:	e4 e0       	ldi	r30, 0x04	; 4
 62a:	0c 94 d2 05 	jmp	0xba4	; 0xba4 <__epilogue_restores__+0x1c>

0000062e <vfprintf>:
 62e:	ab e0       	ldi	r26, 0x0B	; 11
 630:	b0 e0       	ldi	r27, 0x00	; 0
 632:	ed e1       	ldi	r30, 0x1D	; 29
 634:	f3 e0       	ldi	r31, 0x03	; 3
 636:	0c 94 a8 05 	jmp	0xb50	; 0xb50 <__prologue_saves__>
 63a:	6c 01       	movw	r12, r24
 63c:	7b 01       	movw	r14, r22
 63e:	8a 01       	movw	r16, r20
 640:	fc 01       	movw	r30, r24
 642:	17 82       	std	Z+7, r1	; 0x07
 644:	16 82       	std	Z+6, r1	; 0x06
 646:	83 81       	ldd	r24, Z+3	; 0x03
 648:	81 ff       	sbrs	r24, 1
 64a:	cc c1       	rjmp	.+920    	; 0x9e4 <__stack+0xe5>
 64c:	ce 01       	movw	r24, r28
 64e:	01 96       	adiw	r24, 0x01	; 1
 650:	3c 01       	movw	r6, r24
 652:	f6 01       	movw	r30, r12
 654:	93 81       	ldd	r25, Z+3	; 0x03
 656:	f7 01       	movw	r30, r14
 658:	93 fd       	sbrc	r25, 3
 65a:	85 91       	lpm	r24, Z+
 65c:	93 ff       	sbrs	r25, 3
 65e:	81 91       	ld	r24, Z+
 660:	7f 01       	movw	r14, r30
 662:	88 23       	and	r24, r24
 664:	09 f4       	brne	.+2      	; 0x668 <vfprintf+0x3a>
 666:	ba c1       	rjmp	.+884    	; 0x9dc <__stack+0xdd>
 668:	85 32       	cpi	r24, 0x25	; 37
 66a:	39 f4       	brne	.+14     	; 0x67a <vfprintf+0x4c>
 66c:	93 fd       	sbrc	r25, 3
 66e:	85 91       	lpm	r24, Z+
 670:	93 ff       	sbrs	r25, 3
 672:	81 91       	ld	r24, Z+
 674:	7f 01       	movw	r14, r30
 676:	85 32       	cpi	r24, 0x25	; 37
 678:	29 f4       	brne	.+10     	; 0x684 <vfprintf+0x56>
 67a:	b6 01       	movw	r22, r12
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	0e 94 0e 05 	call	0xa1c	; 0xa1c <fputc>
 682:	e7 cf       	rjmp	.-50     	; 0x652 <vfprintf+0x24>
 684:	91 2c       	mov	r9, r1
 686:	21 2c       	mov	r2, r1
 688:	31 2c       	mov	r3, r1
 68a:	ff e1       	ldi	r31, 0x1F	; 31
 68c:	f3 15       	cp	r31, r3
 68e:	d8 f0       	brcs	.+54     	; 0x6c6 <vfprintf+0x98>
 690:	8b 32       	cpi	r24, 0x2B	; 43
 692:	79 f0       	breq	.+30     	; 0x6b2 <vfprintf+0x84>
 694:	38 f4       	brcc	.+14     	; 0x6a4 <vfprintf+0x76>
 696:	80 32       	cpi	r24, 0x20	; 32
 698:	79 f0       	breq	.+30     	; 0x6b8 <vfprintf+0x8a>
 69a:	83 32       	cpi	r24, 0x23	; 35
 69c:	a1 f4       	brne	.+40     	; 0x6c6 <vfprintf+0x98>
 69e:	23 2d       	mov	r18, r3
 6a0:	20 61       	ori	r18, 0x10	; 16
 6a2:	1d c0       	rjmp	.+58     	; 0x6de <vfprintf+0xb0>
 6a4:	8d 32       	cpi	r24, 0x2D	; 45
 6a6:	61 f0       	breq	.+24     	; 0x6c0 <vfprintf+0x92>
 6a8:	80 33       	cpi	r24, 0x30	; 48
 6aa:	69 f4       	brne	.+26     	; 0x6c6 <vfprintf+0x98>
 6ac:	23 2d       	mov	r18, r3
 6ae:	21 60       	ori	r18, 0x01	; 1
 6b0:	16 c0       	rjmp	.+44     	; 0x6de <vfprintf+0xb0>
 6b2:	83 2d       	mov	r24, r3
 6b4:	82 60       	ori	r24, 0x02	; 2
 6b6:	38 2e       	mov	r3, r24
 6b8:	e3 2d       	mov	r30, r3
 6ba:	e4 60       	ori	r30, 0x04	; 4
 6bc:	3e 2e       	mov	r3, r30
 6be:	2a c0       	rjmp	.+84     	; 0x714 <vfprintf+0xe6>
 6c0:	f3 2d       	mov	r31, r3
 6c2:	f8 60       	ori	r31, 0x08	; 8
 6c4:	1d c0       	rjmp	.+58     	; 0x700 <vfprintf+0xd2>
 6c6:	37 fc       	sbrc	r3, 7
 6c8:	2d c0       	rjmp	.+90     	; 0x724 <vfprintf+0xf6>
 6ca:	20 ed       	ldi	r18, 0xD0	; 208
 6cc:	28 0f       	add	r18, r24
 6ce:	2a 30       	cpi	r18, 0x0A	; 10
 6d0:	40 f0       	brcs	.+16     	; 0x6e2 <vfprintf+0xb4>
 6d2:	8e 32       	cpi	r24, 0x2E	; 46
 6d4:	b9 f4       	brne	.+46     	; 0x704 <vfprintf+0xd6>
 6d6:	36 fc       	sbrc	r3, 6
 6d8:	81 c1       	rjmp	.+770    	; 0x9dc <__stack+0xdd>
 6da:	23 2d       	mov	r18, r3
 6dc:	20 64       	ori	r18, 0x40	; 64
 6de:	32 2e       	mov	r3, r18
 6e0:	19 c0       	rjmp	.+50     	; 0x714 <vfprintf+0xe6>
 6e2:	36 fe       	sbrs	r3, 6
 6e4:	06 c0       	rjmp	.+12     	; 0x6f2 <vfprintf+0xc4>
 6e6:	8a e0       	ldi	r24, 0x0A	; 10
 6e8:	98 9e       	mul	r9, r24
 6ea:	20 0d       	add	r18, r0
 6ec:	11 24       	eor	r1, r1
 6ee:	92 2e       	mov	r9, r18
 6f0:	11 c0       	rjmp	.+34     	; 0x714 <vfprintf+0xe6>
 6f2:	ea e0       	ldi	r30, 0x0A	; 10
 6f4:	2e 9e       	mul	r2, r30
 6f6:	20 0d       	add	r18, r0
 6f8:	11 24       	eor	r1, r1
 6fa:	22 2e       	mov	r2, r18
 6fc:	f3 2d       	mov	r31, r3
 6fe:	f0 62       	ori	r31, 0x20	; 32
 700:	3f 2e       	mov	r3, r31
 702:	08 c0       	rjmp	.+16     	; 0x714 <vfprintf+0xe6>
 704:	8c 36       	cpi	r24, 0x6C	; 108
 706:	21 f4       	brne	.+8      	; 0x710 <vfprintf+0xe2>
 708:	83 2d       	mov	r24, r3
 70a:	80 68       	ori	r24, 0x80	; 128
 70c:	38 2e       	mov	r3, r24
 70e:	02 c0       	rjmp	.+4      	; 0x714 <vfprintf+0xe6>
 710:	88 36       	cpi	r24, 0x68	; 104
 712:	41 f4       	brne	.+16     	; 0x724 <vfprintf+0xf6>
 714:	f7 01       	movw	r30, r14
 716:	93 fd       	sbrc	r25, 3
 718:	85 91       	lpm	r24, Z+
 71a:	93 ff       	sbrs	r25, 3
 71c:	81 91       	ld	r24, Z+
 71e:	7f 01       	movw	r14, r30
 720:	81 11       	cpse	r24, r1
 722:	b3 cf       	rjmp	.-154    	; 0x68a <vfprintf+0x5c>
 724:	98 2f       	mov	r25, r24
 726:	9f 7d       	andi	r25, 0xDF	; 223
 728:	95 54       	subi	r25, 0x45	; 69
 72a:	93 30       	cpi	r25, 0x03	; 3
 72c:	28 f4       	brcc	.+10     	; 0x738 <vfprintf+0x10a>
 72e:	0c 5f       	subi	r16, 0xFC	; 252
 730:	1f 4f       	sbci	r17, 0xFF	; 255
 732:	9f e3       	ldi	r25, 0x3F	; 63
 734:	99 83       	std	Y+1, r25	; 0x01
 736:	0d c0       	rjmp	.+26     	; 0x752 <vfprintf+0x124>
 738:	83 36       	cpi	r24, 0x63	; 99
 73a:	31 f0       	breq	.+12     	; 0x748 <vfprintf+0x11a>
 73c:	83 37       	cpi	r24, 0x73	; 115
 73e:	71 f0       	breq	.+28     	; 0x75c <vfprintf+0x12e>
 740:	83 35       	cpi	r24, 0x53	; 83
 742:	09 f0       	breq	.+2      	; 0x746 <vfprintf+0x118>
 744:	59 c0       	rjmp	.+178    	; 0x7f8 <vfprintf+0x1ca>
 746:	21 c0       	rjmp	.+66     	; 0x78a <vfprintf+0x15c>
 748:	f8 01       	movw	r30, r16
 74a:	80 81       	ld	r24, Z
 74c:	89 83       	std	Y+1, r24	; 0x01
 74e:	0e 5f       	subi	r16, 0xFE	; 254
 750:	1f 4f       	sbci	r17, 0xFF	; 255
 752:	88 24       	eor	r8, r8
 754:	83 94       	inc	r8
 756:	91 2c       	mov	r9, r1
 758:	53 01       	movw	r10, r6
 75a:	13 c0       	rjmp	.+38     	; 0x782 <vfprintf+0x154>
 75c:	28 01       	movw	r4, r16
 75e:	f2 e0       	ldi	r31, 0x02	; 2
 760:	4f 0e       	add	r4, r31
 762:	51 1c       	adc	r5, r1
 764:	f8 01       	movw	r30, r16
 766:	a0 80       	ld	r10, Z
 768:	b1 80       	ldd	r11, Z+1	; 0x01
 76a:	36 fe       	sbrs	r3, 6
 76c:	03 c0       	rjmp	.+6      	; 0x774 <vfprintf+0x146>
 76e:	69 2d       	mov	r22, r9
 770:	70 e0       	ldi	r23, 0x00	; 0
 772:	02 c0       	rjmp	.+4      	; 0x778 <vfprintf+0x14a>
 774:	6f ef       	ldi	r22, 0xFF	; 255
 776:	7f ef       	ldi	r23, 0xFF	; 255
 778:	c5 01       	movw	r24, r10
 77a:	0e 94 03 05 	call	0xa06	; 0xa06 <strnlen>
 77e:	4c 01       	movw	r8, r24
 780:	82 01       	movw	r16, r4
 782:	f3 2d       	mov	r31, r3
 784:	ff 77       	andi	r31, 0x7F	; 127
 786:	3f 2e       	mov	r3, r31
 788:	16 c0       	rjmp	.+44     	; 0x7b6 <vfprintf+0x188>
 78a:	28 01       	movw	r4, r16
 78c:	22 e0       	ldi	r18, 0x02	; 2
 78e:	42 0e       	add	r4, r18
 790:	51 1c       	adc	r5, r1
 792:	f8 01       	movw	r30, r16
 794:	a0 80       	ld	r10, Z
 796:	b1 80       	ldd	r11, Z+1	; 0x01
 798:	36 fe       	sbrs	r3, 6
 79a:	03 c0       	rjmp	.+6      	; 0x7a2 <vfprintf+0x174>
 79c:	69 2d       	mov	r22, r9
 79e:	70 e0       	ldi	r23, 0x00	; 0
 7a0:	02 c0       	rjmp	.+4      	; 0x7a6 <vfprintf+0x178>
 7a2:	6f ef       	ldi	r22, 0xFF	; 255
 7a4:	7f ef       	ldi	r23, 0xFF	; 255
 7a6:	c5 01       	movw	r24, r10
 7a8:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <strnlen_P>
 7ac:	4c 01       	movw	r8, r24
 7ae:	f3 2d       	mov	r31, r3
 7b0:	f0 68       	ori	r31, 0x80	; 128
 7b2:	3f 2e       	mov	r3, r31
 7b4:	82 01       	movw	r16, r4
 7b6:	33 fc       	sbrc	r3, 3
 7b8:	1b c0       	rjmp	.+54     	; 0x7f0 <vfprintf+0x1c2>
 7ba:	82 2d       	mov	r24, r2
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	88 16       	cp	r8, r24
 7c0:	99 06       	cpc	r9, r25
 7c2:	b0 f4       	brcc	.+44     	; 0x7f0 <vfprintf+0x1c2>
 7c4:	b6 01       	movw	r22, r12
 7c6:	80 e2       	ldi	r24, 0x20	; 32
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	0e 94 0e 05 	call	0xa1c	; 0xa1c <fputc>
 7ce:	2a 94       	dec	r2
 7d0:	f4 cf       	rjmp	.-24     	; 0x7ba <vfprintf+0x18c>
 7d2:	f5 01       	movw	r30, r10
 7d4:	37 fc       	sbrc	r3, 7
 7d6:	85 91       	lpm	r24, Z+
 7d8:	37 fe       	sbrs	r3, 7
 7da:	81 91       	ld	r24, Z+
 7dc:	5f 01       	movw	r10, r30
 7de:	b6 01       	movw	r22, r12
 7e0:	90 e0       	ldi	r25, 0x00	; 0
 7e2:	0e 94 0e 05 	call	0xa1c	; 0xa1c <fputc>
 7e6:	21 10       	cpse	r2, r1
 7e8:	2a 94       	dec	r2
 7ea:	21 e0       	ldi	r18, 0x01	; 1
 7ec:	82 1a       	sub	r8, r18
 7ee:	91 08       	sbc	r9, r1
 7f0:	81 14       	cp	r8, r1
 7f2:	91 04       	cpc	r9, r1
 7f4:	71 f7       	brne	.-36     	; 0x7d2 <vfprintf+0x1a4>
 7f6:	e8 c0       	rjmp	.+464    	; 0x9c8 <__stack+0xc9>
 7f8:	84 36       	cpi	r24, 0x64	; 100
 7fa:	11 f0       	breq	.+4      	; 0x800 <vfprintf+0x1d2>
 7fc:	89 36       	cpi	r24, 0x69	; 105
 7fe:	41 f5       	brne	.+80     	; 0x850 <vfprintf+0x222>
 800:	f8 01       	movw	r30, r16
 802:	37 fe       	sbrs	r3, 7
 804:	07 c0       	rjmp	.+14     	; 0x814 <vfprintf+0x1e6>
 806:	60 81       	ld	r22, Z
 808:	71 81       	ldd	r23, Z+1	; 0x01
 80a:	82 81       	ldd	r24, Z+2	; 0x02
 80c:	93 81       	ldd	r25, Z+3	; 0x03
 80e:	0c 5f       	subi	r16, 0xFC	; 252
 810:	1f 4f       	sbci	r17, 0xFF	; 255
 812:	08 c0       	rjmp	.+16     	; 0x824 <vfprintf+0x1f6>
 814:	60 81       	ld	r22, Z
 816:	71 81       	ldd	r23, Z+1	; 0x01
 818:	07 2e       	mov	r0, r23
 81a:	00 0c       	add	r0, r0
 81c:	88 0b       	sbc	r24, r24
 81e:	99 0b       	sbc	r25, r25
 820:	0e 5f       	subi	r16, 0xFE	; 254
 822:	1f 4f       	sbci	r17, 0xFF	; 255
 824:	f3 2d       	mov	r31, r3
 826:	ff 76       	andi	r31, 0x6F	; 111
 828:	3f 2e       	mov	r3, r31
 82a:	97 ff       	sbrs	r25, 7
 82c:	09 c0       	rjmp	.+18     	; 0x840 <vfprintf+0x212>
 82e:	90 95       	com	r25
 830:	80 95       	com	r24
 832:	70 95       	com	r23
 834:	61 95       	neg	r22
 836:	7f 4f       	sbci	r23, 0xFF	; 255
 838:	8f 4f       	sbci	r24, 0xFF	; 255
 83a:	9f 4f       	sbci	r25, 0xFF	; 255
 83c:	f0 68       	ori	r31, 0x80	; 128
 83e:	3f 2e       	mov	r3, r31
 840:	2a e0       	ldi	r18, 0x0A	; 10
 842:	30 e0       	ldi	r19, 0x00	; 0
 844:	a3 01       	movw	r20, r6
 846:	0e 94 4a 05 	call	0xa94	; 0xa94 <__ultoa_invert>
 84a:	88 2e       	mov	r8, r24
 84c:	86 18       	sub	r8, r6
 84e:	45 c0       	rjmp	.+138    	; 0x8da <vfprintf+0x2ac>
 850:	85 37       	cpi	r24, 0x75	; 117
 852:	31 f4       	brne	.+12     	; 0x860 <vfprintf+0x232>
 854:	23 2d       	mov	r18, r3
 856:	2f 7e       	andi	r18, 0xEF	; 239
 858:	b2 2e       	mov	r11, r18
 85a:	2a e0       	ldi	r18, 0x0A	; 10
 85c:	30 e0       	ldi	r19, 0x00	; 0
 85e:	25 c0       	rjmp	.+74     	; 0x8aa <vfprintf+0x27c>
 860:	93 2d       	mov	r25, r3
 862:	99 7f       	andi	r25, 0xF9	; 249
 864:	b9 2e       	mov	r11, r25
 866:	8f 36       	cpi	r24, 0x6F	; 111
 868:	c1 f0       	breq	.+48     	; 0x89a <vfprintf+0x26c>
 86a:	18 f4       	brcc	.+6      	; 0x872 <vfprintf+0x244>
 86c:	88 35       	cpi	r24, 0x58	; 88
 86e:	79 f0       	breq	.+30     	; 0x88e <vfprintf+0x260>
 870:	b5 c0       	rjmp	.+362    	; 0x9dc <__stack+0xdd>
 872:	80 37       	cpi	r24, 0x70	; 112
 874:	19 f0       	breq	.+6      	; 0x87c <vfprintf+0x24e>
 876:	88 37       	cpi	r24, 0x78	; 120
 878:	21 f0       	breq	.+8      	; 0x882 <vfprintf+0x254>
 87a:	b0 c0       	rjmp	.+352    	; 0x9dc <__stack+0xdd>
 87c:	e9 2f       	mov	r30, r25
 87e:	e0 61       	ori	r30, 0x10	; 16
 880:	be 2e       	mov	r11, r30
 882:	b4 fe       	sbrs	r11, 4
 884:	0d c0       	rjmp	.+26     	; 0x8a0 <vfprintf+0x272>
 886:	fb 2d       	mov	r31, r11
 888:	f4 60       	ori	r31, 0x04	; 4
 88a:	bf 2e       	mov	r11, r31
 88c:	09 c0       	rjmp	.+18     	; 0x8a0 <vfprintf+0x272>
 88e:	34 fe       	sbrs	r3, 4
 890:	0a c0       	rjmp	.+20     	; 0x8a6 <vfprintf+0x278>
 892:	29 2f       	mov	r18, r25
 894:	26 60       	ori	r18, 0x06	; 6
 896:	b2 2e       	mov	r11, r18
 898:	06 c0       	rjmp	.+12     	; 0x8a6 <vfprintf+0x278>
 89a:	28 e0       	ldi	r18, 0x08	; 8
 89c:	30 e0       	ldi	r19, 0x00	; 0
 89e:	05 c0       	rjmp	.+10     	; 0x8aa <vfprintf+0x27c>
 8a0:	20 e1       	ldi	r18, 0x10	; 16
 8a2:	30 e0       	ldi	r19, 0x00	; 0
 8a4:	02 c0       	rjmp	.+4      	; 0x8aa <vfprintf+0x27c>
 8a6:	20 e1       	ldi	r18, 0x10	; 16
 8a8:	32 e0       	ldi	r19, 0x02	; 2
 8aa:	f8 01       	movw	r30, r16
 8ac:	b7 fe       	sbrs	r11, 7
 8ae:	07 c0       	rjmp	.+14     	; 0x8be <vfprintf+0x290>
 8b0:	60 81       	ld	r22, Z
 8b2:	71 81       	ldd	r23, Z+1	; 0x01
 8b4:	82 81       	ldd	r24, Z+2	; 0x02
 8b6:	93 81       	ldd	r25, Z+3	; 0x03
 8b8:	0c 5f       	subi	r16, 0xFC	; 252
 8ba:	1f 4f       	sbci	r17, 0xFF	; 255
 8bc:	06 c0       	rjmp	.+12     	; 0x8ca <vfprintf+0x29c>
 8be:	60 81       	ld	r22, Z
 8c0:	71 81       	ldd	r23, Z+1	; 0x01
 8c2:	80 e0       	ldi	r24, 0x00	; 0
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	0e 5f       	subi	r16, 0xFE	; 254
 8c8:	1f 4f       	sbci	r17, 0xFF	; 255
 8ca:	a3 01       	movw	r20, r6
 8cc:	0e 94 4a 05 	call	0xa94	; 0xa94 <__ultoa_invert>
 8d0:	88 2e       	mov	r8, r24
 8d2:	86 18       	sub	r8, r6
 8d4:	fb 2d       	mov	r31, r11
 8d6:	ff 77       	andi	r31, 0x7F	; 127
 8d8:	3f 2e       	mov	r3, r31
 8da:	36 fe       	sbrs	r3, 6
 8dc:	0d c0       	rjmp	.+26     	; 0x8f8 <vfprintf+0x2ca>
 8de:	23 2d       	mov	r18, r3
 8e0:	2e 7f       	andi	r18, 0xFE	; 254
 8e2:	a2 2e       	mov	r10, r18
 8e4:	89 14       	cp	r8, r9
 8e6:	58 f4       	brcc	.+22     	; 0x8fe <vfprintf+0x2d0>
 8e8:	34 fe       	sbrs	r3, 4
 8ea:	0b c0       	rjmp	.+22     	; 0x902 <__stack+0x3>
 8ec:	32 fc       	sbrc	r3, 2
 8ee:	09 c0       	rjmp	.+18     	; 0x902 <__stack+0x3>
 8f0:	83 2d       	mov	r24, r3
 8f2:	8e 7e       	andi	r24, 0xEE	; 238
 8f4:	a8 2e       	mov	r10, r24
 8f6:	05 c0       	rjmp	.+10     	; 0x902 <__stack+0x3>
 8f8:	b8 2c       	mov	r11, r8
 8fa:	a3 2c       	mov	r10, r3
 8fc:	03 c0       	rjmp	.+6      	; 0x904 <__stack+0x5>
 8fe:	b8 2c       	mov	r11, r8
 900:	01 c0       	rjmp	.+2      	; 0x904 <__stack+0x5>
 902:	b9 2c       	mov	r11, r9
 904:	a4 fe       	sbrs	r10, 4
 906:	0f c0       	rjmp	.+30     	; 0x926 <__stack+0x27>
 908:	fe 01       	movw	r30, r28
 90a:	e8 0d       	add	r30, r8
 90c:	f1 1d       	adc	r31, r1
 90e:	80 81       	ld	r24, Z
 910:	80 33       	cpi	r24, 0x30	; 48
 912:	21 f4       	brne	.+8      	; 0x91c <__stack+0x1d>
 914:	9a 2d       	mov	r25, r10
 916:	99 7e       	andi	r25, 0xE9	; 233
 918:	a9 2e       	mov	r10, r25
 91a:	09 c0       	rjmp	.+18     	; 0x92e <__stack+0x2f>
 91c:	a2 fe       	sbrs	r10, 2
 91e:	06 c0       	rjmp	.+12     	; 0x92c <__stack+0x2d>
 920:	b3 94       	inc	r11
 922:	b3 94       	inc	r11
 924:	04 c0       	rjmp	.+8      	; 0x92e <__stack+0x2f>
 926:	8a 2d       	mov	r24, r10
 928:	86 78       	andi	r24, 0x86	; 134
 92a:	09 f0       	breq	.+2      	; 0x92e <__stack+0x2f>
 92c:	b3 94       	inc	r11
 92e:	a3 fc       	sbrc	r10, 3
 930:	11 c0       	rjmp	.+34     	; 0x954 <__stack+0x55>
 932:	a0 fe       	sbrs	r10, 0
 934:	06 c0       	rjmp	.+12     	; 0x942 <__stack+0x43>
 936:	b2 14       	cp	r11, r2
 938:	88 f4       	brcc	.+34     	; 0x95c <__stack+0x5d>
 93a:	28 0c       	add	r2, r8
 93c:	92 2c       	mov	r9, r2
 93e:	9b 18       	sub	r9, r11
 940:	0e c0       	rjmp	.+28     	; 0x95e <__stack+0x5f>
 942:	b2 14       	cp	r11, r2
 944:	60 f4       	brcc	.+24     	; 0x95e <__stack+0x5f>
 946:	b6 01       	movw	r22, r12
 948:	80 e2       	ldi	r24, 0x20	; 32
 94a:	90 e0       	ldi	r25, 0x00	; 0
 94c:	0e 94 0e 05 	call	0xa1c	; 0xa1c <fputc>
 950:	b3 94       	inc	r11
 952:	f7 cf       	rjmp	.-18     	; 0x942 <__stack+0x43>
 954:	b2 14       	cp	r11, r2
 956:	18 f4       	brcc	.+6      	; 0x95e <__stack+0x5f>
 958:	2b 18       	sub	r2, r11
 95a:	02 c0       	rjmp	.+4      	; 0x960 <__stack+0x61>
 95c:	98 2c       	mov	r9, r8
 95e:	21 2c       	mov	r2, r1
 960:	a4 fe       	sbrs	r10, 4
 962:	10 c0       	rjmp	.+32     	; 0x984 <__stack+0x85>
 964:	b6 01       	movw	r22, r12
 966:	80 e3       	ldi	r24, 0x30	; 48
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	0e 94 0e 05 	call	0xa1c	; 0xa1c <fputc>
 96e:	a2 fe       	sbrs	r10, 2
 970:	17 c0       	rjmp	.+46     	; 0x9a0 <__stack+0xa1>
 972:	a1 fc       	sbrc	r10, 1
 974:	03 c0       	rjmp	.+6      	; 0x97c <__stack+0x7d>
 976:	88 e7       	ldi	r24, 0x78	; 120
 978:	90 e0       	ldi	r25, 0x00	; 0
 97a:	02 c0       	rjmp	.+4      	; 0x980 <__stack+0x81>
 97c:	88 e5       	ldi	r24, 0x58	; 88
 97e:	90 e0       	ldi	r25, 0x00	; 0
 980:	b6 01       	movw	r22, r12
 982:	0c c0       	rjmp	.+24     	; 0x99c <__stack+0x9d>
 984:	8a 2d       	mov	r24, r10
 986:	86 78       	andi	r24, 0x86	; 134
 988:	59 f0       	breq	.+22     	; 0x9a0 <__stack+0xa1>
 98a:	a1 fe       	sbrs	r10, 1
 98c:	02 c0       	rjmp	.+4      	; 0x992 <__stack+0x93>
 98e:	8b e2       	ldi	r24, 0x2B	; 43
 990:	01 c0       	rjmp	.+2      	; 0x994 <__stack+0x95>
 992:	80 e2       	ldi	r24, 0x20	; 32
 994:	a7 fc       	sbrc	r10, 7
 996:	8d e2       	ldi	r24, 0x2D	; 45
 998:	b6 01       	movw	r22, r12
 99a:	90 e0       	ldi	r25, 0x00	; 0
 99c:	0e 94 0e 05 	call	0xa1c	; 0xa1c <fputc>
 9a0:	89 14       	cp	r8, r9
 9a2:	38 f4       	brcc	.+14     	; 0x9b2 <__stack+0xb3>
 9a4:	b6 01       	movw	r22, r12
 9a6:	80 e3       	ldi	r24, 0x30	; 48
 9a8:	90 e0       	ldi	r25, 0x00	; 0
 9aa:	0e 94 0e 05 	call	0xa1c	; 0xa1c <fputc>
 9ae:	9a 94       	dec	r9
 9b0:	f7 cf       	rjmp	.-18     	; 0x9a0 <__stack+0xa1>
 9b2:	8a 94       	dec	r8
 9b4:	f3 01       	movw	r30, r6
 9b6:	e8 0d       	add	r30, r8
 9b8:	f1 1d       	adc	r31, r1
 9ba:	80 81       	ld	r24, Z
 9bc:	b6 01       	movw	r22, r12
 9be:	90 e0       	ldi	r25, 0x00	; 0
 9c0:	0e 94 0e 05 	call	0xa1c	; 0xa1c <fputc>
 9c4:	81 10       	cpse	r8, r1
 9c6:	f5 cf       	rjmp	.-22     	; 0x9b2 <__stack+0xb3>
 9c8:	22 20       	and	r2, r2
 9ca:	09 f4       	brne	.+2      	; 0x9ce <__stack+0xcf>
 9cc:	42 ce       	rjmp	.-892    	; 0x652 <vfprintf+0x24>
 9ce:	b6 01       	movw	r22, r12
 9d0:	80 e2       	ldi	r24, 0x20	; 32
 9d2:	90 e0       	ldi	r25, 0x00	; 0
 9d4:	0e 94 0e 05 	call	0xa1c	; 0xa1c <fputc>
 9d8:	2a 94       	dec	r2
 9da:	f6 cf       	rjmp	.-20     	; 0x9c8 <__stack+0xc9>
 9dc:	f6 01       	movw	r30, r12
 9de:	86 81       	ldd	r24, Z+6	; 0x06
 9e0:	97 81       	ldd	r25, Z+7	; 0x07
 9e2:	02 c0       	rjmp	.+4      	; 0x9e8 <__stack+0xe9>
 9e4:	8f ef       	ldi	r24, 0xFF	; 255
 9e6:	9f ef       	ldi	r25, 0xFF	; 255
 9e8:	2b 96       	adiw	r28, 0x0b	; 11
 9ea:	e2 e1       	ldi	r30, 0x12	; 18
 9ec:	0c 94 c4 05 	jmp	0xb88	; 0xb88 <__epilogue_restores__>

000009f0 <strnlen_P>:
 9f0:	fc 01       	movw	r30, r24
 9f2:	05 90       	lpm	r0, Z+
 9f4:	61 50       	subi	r22, 0x01	; 1
 9f6:	70 40       	sbci	r23, 0x00	; 0
 9f8:	01 10       	cpse	r0, r1
 9fa:	d8 f7       	brcc	.-10     	; 0x9f2 <strnlen_P+0x2>
 9fc:	80 95       	com	r24
 9fe:	90 95       	com	r25
 a00:	8e 0f       	add	r24, r30
 a02:	9f 1f       	adc	r25, r31
 a04:	08 95       	ret

00000a06 <strnlen>:
 a06:	fc 01       	movw	r30, r24
 a08:	61 50       	subi	r22, 0x01	; 1
 a0a:	70 40       	sbci	r23, 0x00	; 0
 a0c:	01 90       	ld	r0, Z+
 a0e:	01 10       	cpse	r0, r1
 a10:	d8 f7       	brcc	.-10     	; 0xa08 <strnlen+0x2>
 a12:	80 95       	com	r24
 a14:	90 95       	com	r25
 a16:	8e 0f       	add	r24, r30
 a18:	9f 1f       	adc	r25, r31
 a1a:	08 95       	ret

00000a1c <fputc>:
 a1c:	0f 93       	push	r16
 a1e:	1f 93       	push	r17
 a20:	cf 93       	push	r28
 a22:	df 93       	push	r29
 a24:	fb 01       	movw	r30, r22
 a26:	23 81       	ldd	r18, Z+3	; 0x03
 a28:	21 fd       	sbrc	r18, 1
 a2a:	03 c0       	rjmp	.+6      	; 0xa32 <fputc+0x16>
 a2c:	8f ef       	ldi	r24, 0xFF	; 255
 a2e:	9f ef       	ldi	r25, 0xFF	; 255
 a30:	2c c0       	rjmp	.+88     	; 0xa8a <fputc+0x6e>
 a32:	22 ff       	sbrs	r18, 2
 a34:	16 c0       	rjmp	.+44     	; 0xa62 <fputc+0x46>
 a36:	46 81       	ldd	r20, Z+6	; 0x06
 a38:	57 81       	ldd	r21, Z+7	; 0x07
 a3a:	24 81       	ldd	r18, Z+4	; 0x04
 a3c:	35 81       	ldd	r19, Z+5	; 0x05
 a3e:	42 17       	cp	r20, r18
 a40:	53 07       	cpc	r21, r19
 a42:	44 f4       	brge	.+16     	; 0xa54 <fputc+0x38>
 a44:	a0 81       	ld	r26, Z
 a46:	b1 81       	ldd	r27, Z+1	; 0x01
 a48:	9d 01       	movw	r18, r26
 a4a:	2f 5f       	subi	r18, 0xFF	; 255
 a4c:	3f 4f       	sbci	r19, 0xFF	; 255
 a4e:	31 83       	std	Z+1, r19	; 0x01
 a50:	20 83       	st	Z, r18
 a52:	8c 93       	st	X, r24
 a54:	26 81       	ldd	r18, Z+6	; 0x06
 a56:	37 81       	ldd	r19, Z+7	; 0x07
 a58:	2f 5f       	subi	r18, 0xFF	; 255
 a5a:	3f 4f       	sbci	r19, 0xFF	; 255
 a5c:	37 83       	std	Z+7, r19	; 0x07
 a5e:	26 83       	std	Z+6, r18	; 0x06
 a60:	14 c0       	rjmp	.+40     	; 0xa8a <fputc+0x6e>
 a62:	8b 01       	movw	r16, r22
 a64:	ec 01       	movw	r28, r24
 a66:	fb 01       	movw	r30, r22
 a68:	00 84       	ldd	r0, Z+8	; 0x08
 a6a:	f1 85       	ldd	r31, Z+9	; 0x09
 a6c:	e0 2d       	mov	r30, r0
 a6e:	09 95       	icall
 a70:	89 2b       	or	r24, r25
 a72:	e1 f6       	brne	.-72     	; 0xa2c <fputc+0x10>
 a74:	d8 01       	movw	r26, r16
 a76:	16 96       	adiw	r26, 0x06	; 6
 a78:	8d 91       	ld	r24, X+
 a7a:	9c 91       	ld	r25, X
 a7c:	17 97       	sbiw	r26, 0x07	; 7
 a7e:	01 96       	adiw	r24, 0x01	; 1
 a80:	17 96       	adiw	r26, 0x07	; 7
 a82:	9c 93       	st	X, r25
 a84:	8e 93       	st	-X, r24
 a86:	16 97       	sbiw	r26, 0x06	; 6
 a88:	ce 01       	movw	r24, r28
 a8a:	df 91       	pop	r29
 a8c:	cf 91       	pop	r28
 a8e:	1f 91       	pop	r17
 a90:	0f 91       	pop	r16
 a92:	08 95       	ret

00000a94 <__ultoa_invert>:
 a94:	fa 01       	movw	r30, r20
 a96:	aa 27       	eor	r26, r26
 a98:	28 30       	cpi	r18, 0x08	; 8
 a9a:	51 f1       	breq	.+84     	; 0xaf0 <__ultoa_invert+0x5c>
 a9c:	20 31       	cpi	r18, 0x10	; 16
 a9e:	81 f1       	breq	.+96     	; 0xb00 <__ultoa_invert+0x6c>
 aa0:	e8 94       	clt
 aa2:	6f 93       	push	r22
 aa4:	6e 7f       	andi	r22, 0xFE	; 254
 aa6:	6e 5f       	subi	r22, 0xFE	; 254
 aa8:	7f 4f       	sbci	r23, 0xFF	; 255
 aaa:	8f 4f       	sbci	r24, 0xFF	; 255
 aac:	9f 4f       	sbci	r25, 0xFF	; 255
 aae:	af 4f       	sbci	r26, 0xFF	; 255
 ab0:	b1 e0       	ldi	r27, 0x01	; 1
 ab2:	3e d0       	rcall	.+124    	; 0xb30 <__ultoa_invert+0x9c>
 ab4:	b4 e0       	ldi	r27, 0x04	; 4
 ab6:	3c d0       	rcall	.+120    	; 0xb30 <__ultoa_invert+0x9c>
 ab8:	67 0f       	add	r22, r23
 aba:	78 1f       	adc	r23, r24
 abc:	89 1f       	adc	r24, r25
 abe:	9a 1f       	adc	r25, r26
 ac0:	a1 1d       	adc	r26, r1
 ac2:	68 0f       	add	r22, r24
 ac4:	79 1f       	adc	r23, r25
 ac6:	8a 1f       	adc	r24, r26
 ac8:	91 1d       	adc	r25, r1
 aca:	a1 1d       	adc	r26, r1
 acc:	6a 0f       	add	r22, r26
 ace:	71 1d       	adc	r23, r1
 ad0:	81 1d       	adc	r24, r1
 ad2:	91 1d       	adc	r25, r1
 ad4:	a1 1d       	adc	r26, r1
 ad6:	20 d0       	rcall	.+64     	; 0xb18 <__ultoa_invert+0x84>
 ad8:	09 f4       	brne	.+2      	; 0xadc <__ultoa_invert+0x48>
 ada:	68 94       	set
 adc:	3f 91       	pop	r19
 ade:	2a e0       	ldi	r18, 0x0A	; 10
 ae0:	26 9f       	mul	r18, r22
 ae2:	11 24       	eor	r1, r1
 ae4:	30 19       	sub	r19, r0
 ae6:	30 5d       	subi	r19, 0xD0	; 208
 ae8:	31 93       	st	Z+, r19
 aea:	de f6       	brtc	.-74     	; 0xaa2 <__ultoa_invert+0xe>
 aec:	cf 01       	movw	r24, r30
 aee:	08 95       	ret
 af0:	46 2f       	mov	r20, r22
 af2:	47 70       	andi	r20, 0x07	; 7
 af4:	40 5d       	subi	r20, 0xD0	; 208
 af6:	41 93       	st	Z+, r20
 af8:	b3 e0       	ldi	r27, 0x03	; 3
 afa:	0f d0       	rcall	.+30     	; 0xb1a <__ultoa_invert+0x86>
 afc:	c9 f7       	brne	.-14     	; 0xaf0 <__ultoa_invert+0x5c>
 afe:	f6 cf       	rjmp	.-20     	; 0xaec <__ultoa_invert+0x58>
 b00:	46 2f       	mov	r20, r22
 b02:	4f 70       	andi	r20, 0x0F	; 15
 b04:	40 5d       	subi	r20, 0xD0	; 208
 b06:	4a 33       	cpi	r20, 0x3A	; 58
 b08:	18 f0       	brcs	.+6      	; 0xb10 <__ultoa_invert+0x7c>
 b0a:	49 5d       	subi	r20, 0xD9	; 217
 b0c:	31 fd       	sbrc	r19, 1
 b0e:	40 52       	subi	r20, 0x20	; 32
 b10:	41 93       	st	Z+, r20
 b12:	02 d0       	rcall	.+4      	; 0xb18 <__ultoa_invert+0x84>
 b14:	a9 f7       	brne	.-22     	; 0xb00 <__ultoa_invert+0x6c>
 b16:	ea cf       	rjmp	.-44     	; 0xaec <__ultoa_invert+0x58>
 b18:	b4 e0       	ldi	r27, 0x04	; 4
 b1a:	a6 95       	lsr	r26
 b1c:	97 95       	ror	r25
 b1e:	87 95       	ror	r24
 b20:	77 95       	ror	r23
 b22:	67 95       	ror	r22
 b24:	ba 95       	dec	r27
 b26:	c9 f7       	brne	.-14     	; 0xb1a <__ultoa_invert+0x86>
 b28:	00 97       	sbiw	r24, 0x00	; 0
 b2a:	61 05       	cpc	r22, r1
 b2c:	71 05       	cpc	r23, r1
 b2e:	08 95       	ret
 b30:	9b 01       	movw	r18, r22
 b32:	ac 01       	movw	r20, r24
 b34:	0a 2e       	mov	r0, r26
 b36:	06 94       	lsr	r0
 b38:	57 95       	ror	r21
 b3a:	47 95       	ror	r20
 b3c:	37 95       	ror	r19
 b3e:	27 95       	ror	r18
 b40:	ba 95       	dec	r27
 b42:	c9 f7       	brne	.-14     	; 0xb36 <__ultoa_invert+0xa2>
 b44:	62 0f       	add	r22, r18
 b46:	73 1f       	adc	r23, r19
 b48:	84 1f       	adc	r24, r20
 b4a:	95 1f       	adc	r25, r21
 b4c:	a0 1d       	adc	r26, r0
 b4e:	08 95       	ret

00000b50 <__prologue_saves__>:
 b50:	2f 92       	push	r2
 b52:	3f 92       	push	r3
 b54:	4f 92       	push	r4
 b56:	5f 92       	push	r5
 b58:	6f 92       	push	r6
 b5a:	7f 92       	push	r7
 b5c:	8f 92       	push	r8
 b5e:	9f 92       	push	r9
 b60:	af 92       	push	r10
 b62:	bf 92       	push	r11
 b64:	cf 92       	push	r12
 b66:	df 92       	push	r13
 b68:	ef 92       	push	r14
 b6a:	ff 92       	push	r15
 b6c:	0f 93       	push	r16
 b6e:	1f 93       	push	r17
 b70:	cf 93       	push	r28
 b72:	df 93       	push	r29
 b74:	cd b7       	in	r28, 0x3d	; 61
 b76:	de b7       	in	r29, 0x3e	; 62
 b78:	ca 1b       	sub	r28, r26
 b7a:	db 0b       	sbc	r29, r27
 b7c:	0f b6       	in	r0, 0x3f	; 63
 b7e:	f8 94       	cli
 b80:	de bf       	out	0x3e, r29	; 62
 b82:	0f be       	out	0x3f, r0	; 63
 b84:	cd bf       	out	0x3d, r28	; 61
 b86:	09 94       	ijmp

00000b88 <__epilogue_restores__>:
 b88:	2a 88       	ldd	r2, Y+18	; 0x12
 b8a:	39 88       	ldd	r3, Y+17	; 0x11
 b8c:	48 88       	ldd	r4, Y+16	; 0x10
 b8e:	5f 84       	ldd	r5, Y+15	; 0x0f
 b90:	6e 84       	ldd	r6, Y+14	; 0x0e
 b92:	7d 84       	ldd	r7, Y+13	; 0x0d
 b94:	8c 84       	ldd	r8, Y+12	; 0x0c
 b96:	9b 84       	ldd	r9, Y+11	; 0x0b
 b98:	aa 84       	ldd	r10, Y+10	; 0x0a
 b9a:	b9 84       	ldd	r11, Y+9	; 0x09
 b9c:	c8 84       	ldd	r12, Y+8	; 0x08
 b9e:	df 80       	ldd	r13, Y+7	; 0x07
 ba0:	ee 80       	ldd	r14, Y+6	; 0x06
 ba2:	fd 80       	ldd	r15, Y+5	; 0x05
 ba4:	0c 81       	ldd	r16, Y+4	; 0x04
 ba6:	1b 81       	ldd	r17, Y+3	; 0x03
 ba8:	aa 81       	ldd	r26, Y+2	; 0x02
 baa:	b9 81       	ldd	r27, Y+1	; 0x01
 bac:	ce 0f       	add	r28, r30
 bae:	d1 1d       	adc	r29, r1
 bb0:	0f b6       	in	r0, 0x3f	; 63
 bb2:	f8 94       	cli
 bb4:	de bf       	out	0x3e, r29	; 62
 bb6:	0f be       	out	0x3f, r0	; 63
 bb8:	cd bf       	out	0x3d, r28	; 61
 bba:	ed 01       	movw	r28, r26
 bbc:	08 95       	ret

00000bbe <_exit>:
 bbe:	f8 94       	cli

00000bc0 <__stop_program>:
 bc0:	ff cf       	rjmp	.-2      	; 0xbc0 <__stop_program>
